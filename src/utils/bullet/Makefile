# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/utils/bullet/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/critterding
pkgincludedir = $(includedir)/critterding
pkglibdir = $(libdir)/critterding
pkglibexecdir = $(libexecdir)/critterding
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = src/utils/bullet
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbulletcollision_la_LIBADD =
am__objects_1 =
am_libbulletcollision_la_OBJECTS = btRaycastCallback.lo \
	btMinkowskiPenetrationDepthSolver.lo btSubSimplexConvexCast.lo \
	btGjkEpaPenetrationDepthSolver.lo btGjkConvexCast.lo \
	btPersistentManifold.lo btConvexCast.lo \
	btContinuousConvexCollision.lo btGjkPairDetector.lo \
	btGjkEpa2.lo btVoronoiSimplexSolver.lo \
	btActivatingCollisionAlgorithm.lo btCollisionObject.lo \
	btEmptyCollisionAlgorithm.lo btGhostObject.lo \
	btSphereSphereCollisionAlgorithm.lo \
	btSphereBoxCollisionAlgorithm.lo btCollisionDispatcher.lo \
	btDefaultCollisionConfiguration.lo \
	btSimulationIslandManager.lo btBoxBoxDetector.lo \
	btConvexPlaneCollisionAlgorithm.lo \
	btConvexConcaveCollisionAlgorithm.lo \
	btBoxBoxCollisionAlgorithm.lo SphereTriangleDetector.lo \
	btManifoldResult.lo btCollisionWorld.lo \
	btSphereTriangleCollisionAlgorithm.lo \
	btConvexConvexAlgorithm.lo btUnionFind.lo \
	btCompoundCollisionAlgorithm.lo btTetrahedronShape.lo \
	btShapeHull.lo btMinkowskiSumShape.lo btCompoundShape.lo \
	btConeShape.lo btMultiSphereShape.lo btUniformScalingShape.lo \
	btSphereShape.lo btTriangleIndexVertexArray.lo \
	btBvhTriangleMeshShape.lo btTriangleMeshShape.lo \
	btTriangleBuffer.lo btStaticPlaneShape.lo \
	btPolyhedralConvexShape.lo btEmptyShape.lo btCollisionShape.lo \
	btConvexShape.lo btConvexInternalShape.lo btConvexHullShape.lo \
	btTriangleCallback.lo btCapsuleShape.lo \
	btConvexTriangleMeshShape.lo btConcaveShape.lo \
	btConvexPointCloudShape.lo btBoxShape.lo btOptimizedBvh.lo \
	btHeightfieldTerrainShape.lo \
	btMultimaterialTriangleMeshShape.lo btCylinderShape.lo \
	btScaledBvhTriangleMeshShape.lo btStridingMeshInterface.lo \
	btTriangleIndexVertexMaterialArray.lo btTriangleMesh.lo \
	btAxisSweep3.lo btOverlappingPairCache.lo btDbvtBroadphase.lo \
	btMultiSapBroadphase.lo btDispatcher.lo btBroadphaseProxy.lo \
	btQuantizedBvh.lo btCollisionAlgorithm.lo btDbvt.lo \
	btSimpleBroadphase.lo btGImpactBvh.lo btGImpactQuantizedBvh.lo \
	btTriangleShapeEx.lo btGImpactCollisionAlgorithm.lo \
	btGImpactShape.lo gim_box_set.lo gim_contact.lo gim_memory.lo \
	gim_tri_collision.lo $(am__objects_1)
libbulletcollision_la_OBJECTS = $(am_libbulletcollision_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbulletcollision_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libbulletcollision_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libbulletdynamics_la_LIBADD =
am_libbulletdynamics_la_OBJECTS = btContinuousDynamicsWorld.lo \
	btRigidBody.lo btSimpleDynamicsWorld.lo Bullet-C-API.lo \
	btDiscreteDynamicsWorld.lo btGeneric6DofConstraint.lo \
	btSolve2LinearConstraint.lo btPoint2PointConstraint.lo \
	btTypedConstraint.lo btContactConstraint.lo \
	btSliderConstraint.lo btConeTwistConstraint.lo \
	btHingeConstraint.lo btSequentialImpulseConstraintSolver.lo \
	btWheelInfo.lo btRaycastVehicle.lo \
	btKinematicCharacterController.lo $(am__objects_1)
libbulletdynamics_la_OBJECTS = $(am_libbulletdynamics_la_OBJECTS)
libbulletdynamics_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libbulletdynamics_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libbulletmath_la_LIBADD =
am_libbulletmath_la_OBJECTS = btQuickprof.lo btGeometryUtil.lo \
	btAlignedAllocator.lo btConvexHull.lo $(am__objects_1)
libbulletmath_la_OBJECTS = $(am_libbulletmath_la_OBJECTS)
libbulletmath_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libbulletmath_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libbulletsoftbody_la_LIBADD =
am_libbulletsoftbody_la_OBJECTS =  \
	btSoftBodyRigidBodyCollisionConfiguration.lo btSoftBody.lo \
	btSoftRigidCollisionAlgorithm.lo \
	btSoftBodyConcaveCollisionAlgorithm.lo \
	btSoftRigidDynamicsWorld.lo btSoftBodyHelpers.lo \
	btSoftSoftCollisionAlgorithm.lo $(am__objects_1)
libbulletsoftbody_la_OBJECTS = $(am_libbulletsoftbody_la_OBJECTS)
libbulletsoftbody_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libbulletsoftbody_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/Bullet-C-API.Plo \
	./$(DEPDIR)/SphereTriangleDetector.Plo \
	./$(DEPDIR)/btActivatingCollisionAlgorithm.Plo \
	./$(DEPDIR)/btAlignedAllocator.Plo \
	./$(DEPDIR)/btAxisSweep3.Plo \
	./$(DEPDIR)/btBoxBoxCollisionAlgorithm.Plo \
	./$(DEPDIR)/btBoxBoxDetector.Plo ./$(DEPDIR)/btBoxShape.Plo \
	./$(DEPDIR)/btBroadphaseProxy.Plo \
	./$(DEPDIR)/btBvhTriangleMeshShape.Plo \
	./$(DEPDIR)/btCapsuleShape.Plo \
	./$(DEPDIR)/btCollisionAlgorithm.Plo \
	./$(DEPDIR)/btCollisionDispatcher.Plo \
	./$(DEPDIR)/btCollisionObject.Plo \
	./$(DEPDIR)/btCollisionShape.Plo \
	./$(DEPDIR)/btCollisionWorld.Plo \
	./$(DEPDIR)/btCompoundCollisionAlgorithm.Plo \
	./$(DEPDIR)/btCompoundShape.Plo ./$(DEPDIR)/btConcaveShape.Plo \
	./$(DEPDIR)/btConeShape.Plo \
	./$(DEPDIR)/btConeTwistConstraint.Plo \
	./$(DEPDIR)/btContactConstraint.Plo \
	./$(DEPDIR)/btContinuousConvexCollision.Plo \
	./$(DEPDIR)/btContinuousDynamicsWorld.Plo \
	./$(DEPDIR)/btConvexCast.Plo \
	./$(DEPDIR)/btConvexConcaveCollisionAlgorithm.Plo \
	./$(DEPDIR)/btConvexConvexAlgorithm.Plo \
	./$(DEPDIR)/btConvexHull.Plo ./$(DEPDIR)/btConvexHullShape.Plo \
	./$(DEPDIR)/btConvexInternalShape.Plo \
	./$(DEPDIR)/btConvexPlaneCollisionAlgorithm.Plo \
	./$(DEPDIR)/btConvexPointCloudShape.Plo \
	./$(DEPDIR)/btConvexShape.Plo \
	./$(DEPDIR)/btConvexTriangleMeshShape.Plo \
	./$(DEPDIR)/btCylinderShape.Plo ./$(DEPDIR)/btDbvt.Plo \
	./$(DEPDIR)/btDbvtBroadphase.Plo \
	./$(DEPDIR)/btDefaultCollisionConfiguration.Plo \
	./$(DEPDIR)/btDiscreteDynamicsWorld.Plo \
	./$(DEPDIR)/btDispatcher.Plo \
	./$(DEPDIR)/btEmptyCollisionAlgorithm.Plo \
	./$(DEPDIR)/btEmptyShape.Plo ./$(DEPDIR)/btGImpactBvh.Plo \
	./$(DEPDIR)/btGImpactCollisionAlgorithm.Plo \
	./$(DEPDIR)/btGImpactQuantizedBvh.Plo \
	./$(DEPDIR)/btGImpactShape.Plo \
	./$(DEPDIR)/btGeneric6DofConstraint.Plo \
	./$(DEPDIR)/btGeometryUtil.Plo ./$(DEPDIR)/btGhostObject.Plo \
	./$(DEPDIR)/btGjkConvexCast.Plo ./$(DEPDIR)/btGjkEpa2.Plo \
	./$(DEPDIR)/btGjkEpaPenetrationDepthSolver.Plo \
	./$(DEPDIR)/btGjkPairDetector.Plo \
	./$(DEPDIR)/btHeightfieldTerrainShape.Plo \
	./$(DEPDIR)/btHingeConstraint.Plo \
	./$(DEPDIR)/btKinematicCharacterController.Plo \
	./$(DEPDIR)/btManifoldResult.Plo \
	./$(DEPDIR)/btMinkowskiPenetrationDepthSolver.Plo \
	./$(DEPDIR)/btMinkowskiSumShape.Plo \
	./$(DEPDIR)/btMultiSapBroadphase.Plo \
	./$(DEPDIR)/btMultiSphereShape.Plo \
	./$(DEPDIR)/btMultimaterialTriangleMeshShape.Plo \
	./$(DEPDIR)/btOptimizedBvh.Plo \
	./$(DEPDIR)/btOverlappingPairCache.Plo \
	./$(DEPDIR)/btPersistentManifold.Plo \
	./$(DEPDIR)/btPoint2PointConstraint.Plo \
	./$(DEPDIR)/btPolyhedralConvexShape.Plo \
	./$(DEPDIR)/btQuantizedBvh.Plo ./$(DEPDIR)/btQuickprof.Plo \
	./$(DEPDIR)/btRaycastCallback.Plo \
	./$(DEPDIR)/btRaycastVehicle.Plo ./$(DEPDIR)/btRigidBody.Plo \
	./$(DEPDIR)/btScaledBvhTriangleMeshShape.Plo \
	./$(DEPDIR)/btSequentialImpulseConstraintSolver.Plo \
	./$(DEPDIR)/btShapeHull.Plo ./$(DEPDIR)/btSimpleBroadphase.Plo \
	./$(DEPDIR)/btSimpleDynamicsWorld.Plo \
	./$(DEPDIR)/btSimulationIslandManager.Plo \
	./$(DEPDIR)/btSliderConstraint.Plo ./$(DEPDIR)/btSoftBody.Plo \
	./$(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Plo \
	./$(DEPDIR)/btSoftBodyHelpers.Plo \
	./$(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Plo \
	./$(DEPDIR)/btSoftRigidCollisionAlgorithm.Plo \
	./$(DEPDIR)/btSoftRigidDynamicsWorld.Plo \
	./$(DEPDIR)/btSoftSoftCollisionAlgorithm.Plo \
	./$(DEPDIR)/btSolve2LinearConstraint.Plo \
	./$(DEPDIR)/btSphereBoxCollisionAlgorithm.Plo \
	./$(DEPDIR)/btSphereShape.Plo \
	./$(DEPDIR)/btSphereSphereCollisionAlgorithm.Plo \
	./$(DEPDIR)/btSphereTriangleCollisionAlgorithm.Plo \
	./$(DEPDIR)/btStaticPlaneShape.Plo \
	./$(DEPDIR)/btStridingMeshInterface.Plo \
	./$(DEPDIR)/btSubSimplexConvexCast.Plo \
	./$(DEPDIR)/btTetrahedronShape.Plo \
	./$(DEPDIR)/btTriangleBuffer.Plo \
	./$(DEPDIR)/btTriangleCallback.Plo \
	./$(DEPDIR)/btTriangleIndexVertexArray.Plo \
	./$(DEPDIR)/btTriangleIndexVertexMaterialArray.Plo \
	./$(DEPDIR)/btTriangleMesh.Plo \
	./$(DEPDIR)/btTriangleMeshShape.Plo \
	./$(DEPDIR)/btTriangleShapeEx.Plo \
	./$(DEPDIR)/btTypedConstraint.Plo \
	./$(DEPDIR)/btUniformScalingShape.Plo \
	./$(DEPDIR)/btUnionFind.Plo \
	./$(DEPDIR)/btVoronoiSimplexSolver.Plo \
	./$(DEPDIR)/btWheelInfo.Plo ./$(DEPDIR)/gim_box_set.Plo \
	./$(DEPDIR)/gim_contact.Plo ./$(DEPDIR)/gim_memory.Plo \
	./$(DEPDIR)/gim_tri_collision.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbulletcollision_la_SOURCES) \
	$(libbulletdynamics_la_SOURCES) $(libbulletmath_la_SOURCES) \
	$(libbulletsoftbody_la_SOURCES)
DIST_SOURCES = $(libbulletcollision_la_SOURCES) \
	$(libbulletdynamics_la_SOURCES) $(libbulletmath_la_SOURCES) \
	$(libbulletsoftbody_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/jevans/Repos/CritX/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/home/jevans/Repos/CritX/missing' autoconf
AUTOHEADER = ${SHELL} '/home/jevans/Repos/CritX/missing' autoheader
AUTOMAKE = ${SHELL} '/home/jevans/Repos/CritX/missing' automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -I/usr/include/FTGL -I/usr/include/freetype2 -I/usr/include/libpng16 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = file
FREETYPE_CONFIG = 
FTGL_CFLAGS = -I/usr/include/FTGL -I/usr/include/freetype2 -I/usr/include/libpng16 
FTGL_LA = 
FTGL_LIBS = -lftgl 
FTGL_LOCALDIR = 
GREP = /usr/bin/grep
HOST_LIBS = -lGL -lGLU -lGLEW -lSDL2 -lftgl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/home/jevans/Repos/CritX/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = 
OBJCDEPMODE = 
OBJCFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OS = UNIX
OTOOL = 
OTOOL64 = 
PACKAGE = critterding
PACKAGE_BUGREPORT = 
PACKAGE_NAME = critterding
PACKAGE_STRING = critterding 0.0.312
PACKAGE_TARNAME = critterding
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.312
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDLMAIN = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.0.312
abs_builddir = /home/jevans/Repos/CritX/src/utils/bullet
abs_srcdir = /home/jevans/Repos/CritX/src/utils/bullet
abs_top_builddir = /home/jevans/Repos/CritX
abs_top_srcdir = /home/jevans/Repos/CritX
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jevans/Repos/CritX/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
INCLUDES = $(all_includes)
METASOURCES = AUTO
noinst_LTLIBRARIES = libbulletmath.la libbulletcollision.la libbulletdynamics.la libbulletsoftbody.la
# libbulletmultithreaded.la
noinst_HEADERS = btBulletDynamicsCommon.h Bullet-C-Api.h btBulletCollisionCommon.h $(bullet_headers)
libbulletmath_la_LDFLAGS = -avoid-version -no-undefined
libbulletcollision_la_LDFLAGS = -avoid-version -no-undefined
libbulletdynamics_la_LDFLAGS = -avoid-version -no-undefined
libbulletsoftbody_la_LDFLAGS = -avoid-version -no-undefined
# libbulletmultithreaded_la_LDFLAGS = -avoid-version -no-undefined

# libbulletmultithreaded_la_SOURCES = \
# 	BulletMultiThreaded/PosixThreadSupport.h \
# 	BulletMultiThreaded/vectormath/scalar/cpp/mat_aos.h \
# 	BulletMultiThreaded/vectormath/scalar/cpp/vec_aos.h \
# 	BulletMultiThreaded/vectormath/scalar/cpp/quat_aos.h \
# 	BulletMultiThreaded/vectormath/scalar/cpp/vectormath_aos.h \
# 	BulletMultiThreaded/PpuAddressSpace.h \
# 	BulletMultiThreaded/PlatformDefinitions.h \
# 	BulletMultiThreaded/vectormath2bullet.h \
# 	BulletMultiThreaded/btThreadSupportInterface.h \
# 	BulletMultiThreaded/Win32ThreadSupport.h \
# 	BulletMultiThreaded/SequentialThreadSupport.h \
# 	BulletMultiThreaded/btThreadSupportInterface.cpp \
# 	BulletMultiThreaded/SequentialThreadSupport.cpp \
# 	BulletMultiThreaded/Win32ThreadSupport.cpp \
# 	BulletMultiThreaded/PosixThreadSupport.cpp \
# 	BulletMultiThreaded/SpuCollisionTaskProcess.h \
# 	BulletMultiThreaded/SpuCollisionTaskProcess.cpp \
# 	BulletMultiThreaded/SpuFakeDma.h \
# 	BulletMultiThreaded/SpuFakeDma.cpp \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.h \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.h \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.cpp \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp \
# 	BulletMultiThreaded/SpuGatheringCollisionDispatcher.h \
# 	BulletMultiThreaded/SpuGatheringCollisionDispatcher.cpp \
# 	BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.h \
# 	BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.cpp \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.h \
# 	BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.cpp
libbulletmath_la_SOURCES = \
		LinearMath/btQuickprof.cpp \
		LinearMath/btGeometryUtil.cpp \
		LinearMath/btAlignedAllocator.cpp \
		LinearMath/btConvexHull.cpp \
		LinearMath/btHashMap.h \
		LinearMath/btConvexHull.h \
		LinearMath/btAabbUtil2.h \
		LinearMath/btGeometryUtil.h \
		LinearMath/btQuadWord.h \
		LinearMath/btPoolAllocator.h \
		LinearMath/btScalar.h \
		LinearMath/btMinMax.h \
		LinearMath/btVector3.h \
		LinearMath/btList.h \
		LinearMath/btStackAlloc.h \
		LinearMath/btMatrix3x3.h \
		LinearMath/btMotionState.h \
		LinearMath/btAlignedAllocator.h \
		LinearMath/btQuaternion.h \
		LinearMath/btAlignedObjectArray.h \
		LinearMath/btQuickprof.h \
		LinearMath/btTransformUtil.h \
		LinearMath/btTransform.h \
		LinearMath/btDefaultMotionState.h \
		LinearMath/btIDebugDraw.h \
		LinearMath/btRandom.h \
		$(NULL)

libbulletcollision_la_SOURCES = \
		BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp \
		BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp \
		BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp \
		BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp \
		BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp \
		BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp \
		BulletCollision/NarrowPhaseCollision/btConvexCast.cpp \
		BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp \
		BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp \
		BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp \
		BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp \
		BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btCollisionObject.cpp \
		BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btGhostObject.cpp \
		BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp \
		BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp \
		BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp \
		BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp \
		BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp \
		BulletCollision/CollisionDispatch/btManifoldResult.cpp \
		BulletCollision/CollisionDispatch/btCollisionWorld.cpp \
		BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp \
		BulletCollision/CollisionDispatch/btUnionFind.cpp \
		BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp \
		BulletCollision/CollisionShapes/btTetrahedronShape.cpp \
		BulletCollision/CollisionShapes/btShapeHull.cpp \
		BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp \
		BulletCollision/CollisionShapes/btCompoundShape.cpp \
		BulletCollision/CollisionShapes/btConeShape.cpp \
		BulletCollision/CollisionShapes/btMultiSphereShape.cpp \
		BulletCollision/CollisionShapes/btUniformScalingShape.cpp \
		BulletCollision/CollisionShapes/btSphereShape.cpp \
		BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp \
		BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp \
		BulletCollision/CollisionShapes/btTriangleMeshShape.cpp \
		BulletCollision/CollisionShapes/btTriangleBuffer.cpp \
		BulletCollision/CollisionShapes/btStaticPlaneShape.cpp \
		BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp \
		BulletCollision/CollisionShapes/btEmptyShape.cpp \
		BulletCollision/CollisionShapes/btCollisionShape.cpp \
		BulletCollision/CollisionShapes/btConvexShape.cpp \
		BulletCollision/CollisionShapes/btConvexInternalShape.cpp \
		BulletCollision/CollisionShapes/btConvexHullShape.cpp \
		BulletCollision/CollisionShapes/btTriangleCallback.cpp \
		BulletCollision/CollisionShapes/btCapsuleShape.cpp \
		BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp \
		BulletCollision/CollisionShapes/btConcaveShape.cpp \
		BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp \
		BulletCollision/CollisionShapes/btBoxShape.cpp \
		BulletCollision/CollisionShapes/btOptimizedBvh.cpp \
		BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp \
		BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp \
		BulletCollision/CollisionShapes/btCylinderShape.cpp \
		BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp \
		BulletCollision/CollisionShapes/btStridingMeshInterface.cpp \
		BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp \
		BulletCollision/CollisionShapes/btTriangleMesh.cpp \
		BulletCollision/BroadphaseCollision/btAxisSweep3.cpp \
		BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp \
		BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp \
		BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp \
		BulletCollision/BroadphaseCollision/btDispatcher.cpp \
		BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp \
		BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp \
		BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp \
		BulletCollision/BroadphaseCollision/btDbvt.cpp \
		BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp \
		BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.h \
		BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h \
		BulletCollision/NarrowPhaseCollision/btConvexCast.h \
		BulletCollision/NarrowPhaseCollision/btGjkEpa2.h \
		BulletCollision/NarrowPhaseCollision/btGjkPairDetector.h \
		BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.h \
		BulletCollision/NarrowPhaseCollision/btPointCollector.h \
		BulletCollision/NarrowPhaseCollision/btConvexPenetrationDepthSolver.h \
		BulletCollision/NarrowPhaseCollision/btSimplexSolverInterface.h \
		BulletCollision/NarrowPhaseCollision/btRaycastCallback.h \
		BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.h \
		BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.h \
		BulletCollision/NarrowPhaseCollision/btPersistentManifold.h \
		BulletCollision/NarrowPhaseCollision/btGjkConvexCast.h \
		BulletCollision/NarrowPhaseCollision/btManifoldPoint.h \
		BulletCollision/NarrowPhaseCollision/btDiscreteCollisionDetectorInterface.h \
		BulletCollision/CollisionDispatch/btCollisionObject.h \
		BulletCollision/CollisionDispatch/btGhostObject.h \
		BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btCollisionCreateFunc.h \
		BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.h \
		BulletCollision/CollisionDispatch/btBoxBoxDetector.h \
		BulletCollision/CollisionDispatch/btCollisionDispatcher.h \
		BulletCollision/CollisionDispatch/SphereTriangleDetector.h \
		BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btUnionFind.h \
		BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btSimulationIslandManager.h \
		BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h \
		BulletCollision/CollisionDispatch/btCollisionWorld.h \
		BulletCollision/CollisionDispatch/btManifoldResult.h \
		BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.h \
		BulletCollision/CollisionDispatch/btCollisionConfiguration.h \
		BulletCollision/CollisionShapes/btConvexShape.h \
		BulletCollision/CollisionShapes/btTriangleCallback.h \
		BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
		BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.h \
		BulletCollision/CollisionShapes/btCompoundShape.h \
		BulletCollision/CollisionShapes/btBoxShape.h \
		BulletCollision/CollisionShapes/btMultiSphereShape.h \
		BulletCollision/CollisionShapes/btCollisionMargin.h \
		BulletCollision/CollisionShapes/btConcaveShape.h \
		BulletCollision/CollisionShapes/btConvexTriangleMeshShape.h \
		BulletCollision/CollisionShapes/btEmptyShape.h \
		BulletCollision/CollisionShapes/btUniformScalingShape.h \
		BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.h \
		BulletCollision/CollisionShapes/btMaterial.h \
		BulletCollision/CollisionShapes/btTriangleIndexVertexArray.h \
		BulletCollision/CollisionShapes/btSphereShape.h \
		BulletCollision/CollisionShapes/btConvexPointCloudShape.h \
		BulletCollision/CollisionShapes/btCapsuleShape.h \
		BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h \
		BulletCollision/CollisionShapes/btCollisionShape.h \
		BulletCollision/CollisionShapes/btStaticPlaneShape.h \
		BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h \
		BulletCollision/CollisionShapes/btTriangleMeshShape.h \
		BulletCollision/CollisionShapes/btStridingMeshInterface.h \
		BulletCollision/CollisionShapes/btTriangleMesh.h \
		BulletCollision/CollisionShapes/btTriangleBuffer.h \
		BulletCollision/CollisionShapes/btShapeHull.h \
		BulletCollision/CollisionShapes/btMinkowskiSumShape.h \
		BulletCollision/CollisionShapes/btOptimizedBvh.h \
		BulletCollision/CollisionShapes/btTriangleShape.h \
		BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.h \
		BulletCollision/CollisionShapes/btCylinderShape.h \
		BulletCollision/CollisionShapes/btTetrahedronShape.h \
		BulletCollision/CollisionShapes/btConvexInternalShape.h \
		BulletCollision/CollisionShapes/btConeShape.h \
		BulletCollision/CollisionShapes/btConvexHullShape.h \
		BulletCollision/BroadphaseCollision/btAxisSweep3.h \
		BulletCollision/BroadphaseCollision/btDbvtBroadphase.h \
		BulletCollision/BroadphaseCollision/btSimpleBroadphase.h \
		BulletCollision/BroadphaseCollision/btMultiSapBroadphase.h \
		BulletCollision/BroadphaseCollision/btDbvt.h \
		BulletCollision/BroadphaseCollision/btOverlappingPairCallback.h \
		BulletCollision/BroadphaseCollision/btDispatcher.h \
		BulletCollision/BroadphaseCollision/btCollisionAlgorithm.h \
		BulletCollision/BroadphaseCollision/btBroadphaseProxy.h \
		BulletCollision/BroadphaseCollision/btOverlappingPairCache.h \
		BulletCollision/BroadphaseCollision/btBroadphaseInterface.h \
		BulletCollision/BroadphaseCollision/btQuantizedBvh.h \
		BulletCollision/Gimpact/btGImpactBvh.cpp\
                BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp\
                BulletCollision/Gimpact/btTriangleShapeEx.cpp\
                BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp\
                BulletCollision/Gimpact/btGImpactShape.cpp\
                BulletCollision/Gimpact/gim_box_set.cpp\
                BulletCollision/Gimpact/gim_contact.cpp\
                BulletCollision/Gimpact/gim_memory.cpp\
                BulletCollision/Gimpact/gim_tri_collision.cpp \
		$(NULL)

libbulletdynamics_la_SOURCES = \
		BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp \
		BulletDynamics/Dynamics/btRigidBody.cpp \
		BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp \
		BulletDynamics/Dynamics/Bullet-C-API.cpp \
		BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp \
		BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp \
		BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp \
		BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp \
		BulletDynamics/ConstraintSolver/btTypedConstraint.cpp \
		BulletDynamics/ConstraintSolver/btContactConstraint.cpp \
		BulletDynamics/ConstraintSolver/btSliderConstraint.cpp \
		BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp \
		BulletDynamics/ConstraintSolver/btHingeConstraint.cpp \
		BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp \
		BulletDynamics/Vehicle/btWheelInfo.cpp \
		BulletDynamics/Vehicle/btRaycastVehicle.cpp \
		BulletDynamics/Character/btKinematicCharacterController.cpp \
		BulletDynamics/Character/btKinematicCharacterController.h \
		BulletDynamics/Character/btCharacterControllerInterface.h \
		BulletDynamics/Dynamics/btContinuousDynamicsWorld.h \
		BulletDynamics/Dynamics/btSimpleDynamicsWorld.h \
		BulletDynamics/Dynamics/btRigidBody.h \
		BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h \
		BulletDynamics/Dynamics/btDynamicsWorld.h \
		BulletDynamics/ConstraintSolver/btSolverBody.h \
		BulletDynamics/ConstraintSolver/btConstraintSolver.h \
		BulletDynamics/ConstraintSolver/btConeTwistConstraint.h \
		BulletDynamics/ConstraintSolver/btTypedConstraint.h \
		BulletDynamics/ConstraintSolver/btContactSolverInfo.h \
		BulletDynamics/ConstraintSolver/btContactConstraint.h \
		BulletDynamics/ConstraintSolver/btPoint2PointConstraint.h \
		BulletDynamics/ConstraintSolver/btJacobianEntry.h \
		BulletDynamics/ConstraintSolver/btSolverConstraint.h \
		BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h \
		BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h \
		BulletDynamics/ConstraintSolver/btSliderConstraint.h \
		BulletDynamics/ConstraintSolver/btHingeConstraint.h \
		BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.h \
		BulletDynamics/Vehicle/btVehicleRaycaster.h \
		BulletDynamics/Vehicle/btRaycastVehicle.h \
		BulletDynamics/Vehicle/btWheelInfo.h \
		$(NULL)

libbulletsoftbody_la_SOURCES = \
		BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp \
		BulletSoftBody/btSoftBody.cpp \
		BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp \
		BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp \
		BulletSoftBody/btSoftRigidDynamicsWorld.cpp \
		BulletSoftBody/btSoftBodyHelpers.cpp \
		BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp \
		BulletSoftBody/btSparseSDF.h \
		BulletSoftBody/btSoftRigidCollisionAlgorithm.h \
		BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.h \
		BulletSoftBody/btSoftBody.h \
		BulletSoftBody/btSoftSoftCollisionAlgorithm.h \
		BulletSoftBody/btSoftBodyInternals.h \
		BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.h \
		BulletSoftBody/btSoftRigidDynamicsWorld.h \
		BulletSoftBody/btSoftBodyHelpers.h \
		$(NULL)

bullet_headers = \
	BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.h \
	BulletSoftBody/btSoftBodyInternals.h \
	BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.h \
	BulletSoftBody/btSoftSoftCollisionAlgorithm.h \
	BulletSoftBody/btSoftBody.h \
	BulletSoftBody/btSoftBodyHelpers.h \
	BulletSoftBody/btSparseSDF.h \
	BulletSoftBody/btSoftRigidCollisionAlgorithm.h \
	BulletSoftBody/btSoftRigidDynamicsWorld.h \
	BulletDynamics/Vehicle/btRaycastVehicle.h \
	BulletDynamics/Vehicle/btWheelInfo.h \
	BulletDynamics/Vehicle/btVehicleRaycaster.h \
	BulletDynamics/Dynamics/btContinuousDynamicsWorld.h \
	BulletDynamics/Dynamics/btRigidBody.h \
	BulletDynamics/Dynamics/btDynamicsWorld.h \
	BulletDynamics/Dynamics/btSimpleDynamicsWorld.h \
	BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h \
	BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h \
	BulletDynamics/ConstraintSolver/btSolverConstraint.h \
	BulletDynamics/ConstraintSolver/btPoint2PointConstraint.h \
	BulletDynamics/ConstraintSolver/btTypedConstraint.h \
	BulletDynamics/ConstraintSolver/btSliderConstraint.h \
	BulletDynamics/ConstraintSolver/btConstraintSolver.h \
	BulletDynamics/ConstraintSolver/btContactConstraint.h \
	BulletDynamics/ConstraintSolver/btContactSolverInfo.h \
	BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h \
	BulletDynamics/ConstraintSolver/btJacobianEntry.h \
	BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.h \
	BulletDynamics/ConstraintSolver/btConeTwistConstraint.h \
	BulletDynamics/ConstraintSolver/btHingeConstraint.h \
	BulletDynamics/ConstraintSolver/btSolverBody.h \
	BulletDynamics/Character/btCharacterControllerInterface.h \
	BulletDynamics/Character/btKinematicCharacterController.h \
	BulletCollision/CollisionShapes/btShapeHull.h \
	BulletCollision/CollisionShapes/btConcaveShape.h \
	BulletCollision/CollisionShapes/btCollisionMargin.h \
	BulletCollision/CollisionShapes/btCompoundShape.h \
	BulletCollision/CollisionShapes/btConvexHullShape.h \
	BulletCollision/CollisionShapes/btCylinderShape.h \
	BulletCollision/CollisionShapes/btTriangleMesh.h \
	BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h \
	BulletCollision/CollisionShapes/btUniformScalingShape.h \
	BulletCollision/CollisionShapes/btConvexPointCloudShape.h \
	BulletCollision/CollisionShapes/btTetrahedronShape.h \
	BulletCollision/CollisionShapes/btCapsuleShape.h \
	BulletCollision/CollisionShapes/btSphereShape.h \
	BulletCollision/CollisionShapes/btMultiSphereShape.h \
	BulletCollision/CollisionShapes/btConvexInternalShape.h \
	BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.h \
	BulletCollision/CollisionShapes/btStridingMeshInterface.h \
	BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h \
	BulletCollision/CollisionShapes/btEmptyShape.h \
	BulletCollision/CollisionShapes/btOptimizedBvh.h \
	BulletCollision/CollisionShapes/btConvexTriangleMeshShape.h \
	BulletCollision/CollisionShapes/btTriangleCallback.h \
	BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.h \
	BulletCollision/CollisionShapes/btTriangleIndexVertexArray.h \
	BulletCollision/CollisionShapes/btTriangleBuffer.h \
	BulletCollision/CollisionShapes/btConvexShape.h \
	BulletCollision/CollisionShapes/btStaticPlaneShape.h \
	BulletCollision/CollisionShapes/btConeShape.h \
	BulletCollision/CollisionShapes/btCollisionShape.h \
	BulletCollision/CollisionShapes/btTriangleShape.h \
	BulletCollision/CollisionShapes/btBoxShape.h \
	BulletCollision/CollisionShapes/btMinkowskiSumShape.h \
	BulletCollision/CollisionShapes/btTriangleMeshShape.h \
	BulletCollision/CollisionShapes/btMaterial.h \
	BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.h \
	BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
	BulletCollision/NarrowPhaseCollision/btConvexCast.h \
	BulletCollision/NarrowPhaseCollision/btGjkEpa2.h \
	BulletCollision/NarrowPhaseCollision/btSimplexSolverInterface.h \
	BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.h \
	BulletCollision/NarrowPhaseCollision/btConvexPenetrationDepthSolver.h \
	BulletCollision/NarrowPhaseCollision/btGjkConvexCast.h \
	BulletCollision/NarrowPhaseCollision/btDiscreteCollisionDetectorInterface.h \
	BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h \
	BulletCollision/NarrowPhaseCollision/btPersistentManifold.h \
	BulletCollision/NarrowPhaseCollision/btManifoldPoint.h \
	BulletCollision/NarrowPhaseCollision/btGjkPairDetector.h \
	BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.h \
	BulletCollision/NarrowPhaseCollision/btRaycastCallback.h \
	BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.h \
	BulletCollision/NarrowPhaseCollision/btPointCollector.h \
	BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.h \
	BulletCollision/BroadphaseCollision/btDbvt.h \
	BulletCollision/BroadphaseCollision/btDispatcher.h \
	BulletCollision/BroadphaseCollision/btDbvtBroadphase.h \
	BulletCollision/BroadphaseCollision/btSimpleBroadphase.h \
	BulletCollision/BroadphaseCollision/btCollisionAlgorithm.h \
	BulletCollision/BroadphaseCollision/btOverlappingPairCallback.h \
	BulletCollision/BroadphaseCollision/btMultiSapBroadphase.h \
	BulletCollision/BroadphaseCollision/btQuantizedBvh.h \
	BulletCollision/BroadphaseCollision/btAxisSweep3.h \
	BulletCollision/BroadphaseCollision/btBroadphaseInterface.h \
	BulletCollision/BroadphaseCollision/btOverlappingPairCache.h \
	BulletCollision/BroadphaseCollision/btBroadphaseProxy.h \
	BulletCollision/CollisionDispatch/btUnionFind.h \
	BulletCollision/CollisionDispatch/btCollisionConfiguration.h \
	BulletCollision/CollisionDispatch/btCollisionDispatcher.h \
	BulletCollision/CollisionDispatch/SphereTriangleDetector.h \
	BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btCollisionWorld.h \
	BulletCollision/CollisionDispatch/btCollisionCreateFunc.h \
	BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.h \
	BulletCollision/CollisionDispatch/btCollisionObject.h \
	BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h \
	BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btGhostObject.h \
	BulletCollision/CollisionDispatch/btSimulationIslandManager.h \
	BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btBoxBoxDetector.h \
	BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.h \
	BulletCollision/CollisionDispatch/btManifoldResult.h \
	BulletCollision/Gimpact/gim_memory.h \
	BulletCollision/Gimpact/gim_clip_polygon.h \
	BulletCollision/Gimpact/gim_bitset.h \
	BulletCollision/Gimpact/gim_linear_math.h \
	BulletCollision/Gimpact/btGeometryOperations.h \
	BulletCollision/Gimpact/btGImpactCollisionAlgorithm.h \
	BulletCollision/Gimpact/btGImpactBvh.h \
	BulletCollision/Gimpact/gim_box_set.h \
	BulletCollision/Gimpact/gim_array.h \
	BulletCollision/Gimpact/btGImpactShape.h \
	BulletCollision/Gimpact/btTriangleShapeEx.h \
	BulletCollision/Gimpact/btClipPolygon.h \
	BulletCollision/Gimpact/gim_box_collision.h \
	BulletCollision/Gimpact/gim_tri_collision.h \
	BulletCollision/Gimpact/gim_geometry.h \
	BulletCollision/Gimpact/gim_math.h \
	BulletCollision/Gimpact/btQuantization.h \
	BulletCollision/Gimpact/btGImpactQuantizedBvh.h \
	BulletCollision/Gimpact/gim_geom_types.h \
	BulletCollision/Gimpact/gim_basic_geometry_operations.h \
	BulletCollision/Gimpact/gim_contact.h \
	BulletCollision/Gimpact/gim_hash_table.h \
	BulletCollision/Gimpact/gim_radixsort.h \
	BulletCollision/Gimpact/btGImpactMassUtil.h \
	BulletCollision/Gimpact/btGenericPoolAllocator.h \
	BulletCollision/Gimpact/btBoxCollision.h \
	BulletCollision/Gimpact/btContactProcessing.h \
	LinearMath/btGeometryUtil.h \
	LinearMath/btConvexHull.h \
	LinearMath/btList.h \
	LinearMath/btMatrix3x3.h \
	LinearMath/btVector3.h \
	LinearMath/btPoolAllocator.h \
	LinearMath/btScalar.h \
	LinearMath/btDefaultMotionState.h \
	LinearMath/btTransform.h \
	LinearMath/btQuadWord.h \
	LinearMath/btAabbUtil2.h \
	LinearMath/btTransformUtil.h \
	LinearMath/btRandom.h \
	LinearMath/btQuaternion.h \
	LinearMath/btMinMax.h \
	LinearMath/btMotionState.h \
	LinearMath/btIDebugDraw.h \
	LinearMath/btAlignedAllocator.h \
	LinearMath/btStackAlloc.h \
	LinearMath/btAlignedObjectArray.h \
	LinearMath/btHashMap.h \
	LinearMath/btQuickprof.h \
    ${NULL}

NULL = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/utils/bullet/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/utils/bullet/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libbulletcollision.la: $(libbulletcollision_la_OBJECTS) $(libbulletcollision_la_DEPENDENCIES) $(EXTRA_libbulletcollision_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbulletcollision_la_LINK)  $(libbulletcollision_la_OBJECTS) $(libbulletcollision_la_LIBADD) $(LIBS)

libbulletdynamics.la: $(libbulletdynamics_la_OBJECTS) $(libbulletdynamics_la_DEPENDENCIES) $(EXTRA_libbulletdynamics_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbulletdynamics_la_LINK)  $(libbulletdynamics_la_OBJECTS) $(libbulletdynamics_la_LIBADD) $(LIBS)

libbulletmath.la: $(libbulletmath_la_OBJECTS) $(libbulletmath_la_DEPENDENCIES) $(EXTRA_libbulletmath_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbulletmath_la_LINK)  $(libbulletmath_la_OBJECTS) $(libbulletmath_la_LIBADD) $(LIBS)

libbulletsoftbody.la: $(libbulletsoftbody_la_OBJECTS) $(libbulletsoftbody_la_DEPENDENCIES) $(EXTRA_libbulletsoftbody_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbulletsoftbody_la_LINK)  $(libbulletsoftbody_la_OBJECTS) $(libbulletsoftbody_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Bullet-C-API.Plo # am--include-marker
include ./$(DEPDIR)/SphereTriangleDetector.Plo # am--include-marker
include ./$(DEPDIR)/btActivatingCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btAlignedAllocator.Plo # am--include-marker
include ./$(DEPDIR)/btAxisSweep3.Plo # am--include-marker
include ./$(DEPDIR)/btBoxBoxCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btBoxBoxDetector.Plo # am--include-marker
include ./$(DEPDIR)/btBoxShape.Plo # am--include-marker
include ./$(DEPDIR)/btBroadphaseProxy.Plo # am--include-marker
include ./$(DEPDIR)/btBvhTriangleMeshShape.Plo # am--include-marker
include ./$(DEPDIR)/btCapsuleShape.Plo # am--include-marker
include ./$(DEPDIR)/btCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btCollisionDispatcher.Plo # am--include-marker
include ./$(DEPDIR)/btCollisionObject.Plo # am--include-marker
include ./$(DEPDIR)/btCollisionShape.Plo # am--include-marker
include ./$(DEPDIR)/btCollisionWorld.Plo # am--include-marker
include ./$(DEPDIR)/btCompoundCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btCompoundShape.Plo # am--include-marker
include ./$(DEPDIR)/btConcaveShape.Plo # am--include-marker
include ./$(DEPDIR)/btConeShape.Plo # am--include-marker
include ./$(DEPDIR)/btConeTwistConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btContactConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btContinuousConvexCollision.Plo # am--include-marker
include ./$(DEPDIR)/btContinuousDynamicsWorld.Plo # am--include-marker
include ./$(DEPDIR)/btConvexCast.Plo # am--include-marker
include ./$(DEPDIR)/btConvexConcaveCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btConvexConvexAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btConvexHull.Plo # am--include-marker
include ./$(DEPDIR)/btConvexHullShape.Plo # am--include-marker
include ./$(DEPDIR)/btConvexInternalShape.Plo # am--include-marker
include ./$(DEPDIR)/btConvexPlaneCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btConvexPointCloudShape.Plo # am--include-marker
include ./$(DEPDIR)/btConvexShape.Plo # am--include-marker
include ./$(DEPDIR)/btConvexTriangleMeshShape.Plo # am--include-marker
include ./$(DEPDIR)/btCylinderShape.Plo # am--include-marker
include ./$(DEPDIR)/btDbvt.Plo # am--include-marker
include ./$(DEPDIR)/btDbvtBroadphase.Plo # am--include-marker
include ./$(DEPDIR)/btDefaultCollisionConfiguration.Plo # am--include-marker
include ./$(DEPDIR)/btDiscreteDynamicsWorld.Plo # am--include-marker
include ./$(DEPDIR)/btDispatcher.Plo # am--include-marker
include ./$(DEPDIR)/btEmptyCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btEmptyShape.Plo # am--include-marker
include ./$(DEPDIR)/btGImpactBvh.Plo # am--include-marker
include ./$(DEPDIR)/btGImpactCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btGImpactQuantizedBvh.Plo # am--include-marker
include ./$(DEPDIR)/btGImpactShape.Plo # am--include-marker
include ./$(DEPDIR)/btGeneric6DofConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btGeometryUtil.Plo # am--include-marker
include ./$(DEPDIR)/btGhostObject.Plo # am--include-marker
include ./$(DEPDIR)/btGjkConvexCast.Plo # am--include-marker
include ./$(DEPDIR)/btGjkEpa2.Plo # am--include-marker
include ./$(DEPDIR)/btGjkEpaPenetrationDepthSolver.Plo # am--include-marker
include ./$(DEPDIR)/btGjkPairDetector.Plo # am--include-marker
include ./$(DEPDIR)/btHeightfieldTerrainShape.Plo # am--include-marker
include ./$(DEPDIR)/btHingeConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btKinematicCharacterController.Plo # am--include-marker
include ./$(DEPDIR)/btManifoldResult.Plo # am--include-marker
include ./$(DEPDIR)/btMinkowskiPenetrationDepthSolver.Plo # am--include-marker
include ./$(DEPDIR)/btMinkowskiSumShape.Plo # am--include-marker
include ./$(DEPDIR)/btMultiSapBroadphase.Plo # am--include-marker
include ./$(DEPDIR)/btMultiSphereShape.Plo # am--include-marker
include ./$(DEPDIR)/btMultimaterialTriangleMeshShape.Plo # am--include-marker
include ./$(DEPDIR)/btOptimizedBvh.Plo # am--include-marker
include ./$(DEPDIR)/btOverlappingPairCache.Plo # am--include-marker
include ./$(DEPDIR)/btPersistentManifold.Plo # am--include-marker
include ./$(DEPDIR)/btPoint2PointConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btPolyhedralConvexShape.Plo # am--include-marker
include ./$(DEPDIR)/btQuantizedBvh.Plo # am--include-marker
include ./$(DEPDIR)/btQuickprof.Plo # am--include-marker
include ./$(DEPDIR)/btRaycastCallback.Plo # am--include-marker
include ./$(DEPDIR)/btRaycastVehicle.Plo # am--include-marker
include ./$(DEPDIR)/btRigidBody.Plo # am--include-marker
include ./$(DEPDIR)/btScaledBvhTriangleMeshShape.Plo # am--include-marker
include ./$(DEPDIR)/btSequentialImpulseConstraintSolver.Plo # am--include-marker
include ./$(DEPDIR)/btShapeHull.Plo # am--include-marker
include ./$(DEPDIR)/btSimpleBroadphase.Plo # am--include-marker
include ./$(DEPDIR)/btSimpleDynamicsWorld.Plo # am--include-marker
include ./$(DEPDIR)/btSimulationIslandManager.Plo # am--include-marker
include ./$(DEPDIR)/btSliderConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btSoftBody.Plo # am--include-marker
include ./$(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btSoftBodyHelpers.Plo # am--include-marker
include ./$(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Plo # am--include-marker
include ./$(DEPDIR)/btSoftRigidCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btSoftRigidDynamicsWorld.Plo # am--include-marker
include ./$(DEPDIR)/btSoftSoftCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btSolve2LinearConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btSphereBoxCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btSphereShape.Plo # am--include-marker
include ./$(DEPDIR)/btSphereSphereCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btSphereTriangleCollisionAlgorithm.Plo # am--include-marker
include ./$(DEPDIR)/btStaticPlaneShape.Plo # am--include-marker
include ./$(DEPDIR)/btStridingMeshInterface.Plo # am--include-marker
include ./$(DEPDIR)/btSubSimplexConvexCast.Plo # am--include-marker
include ./$(DEPDIR)/btTetrahedronShape.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleBuffer.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleCallback.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleIndexVertexArray.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleIndexVertexMaterialArray.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleMesh.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleMeshShape.Plo # am--include-marker
include ./$(DEPDIR)/btTriangleShapeEx.Plo # am--include-marker
include ./$(DEPDIR)/btTypedConstraint.Plo # am--include-marker
include ./$(DEPDIR)/btUniformScalingShape.Plo # am--include-marker
include ./$(DEPDIR)/btUnionFind.Plo # am--include-marker
include ./$(DEPDIR)/btVoronoiSimplexSolver.Plo # am--include-marker
include ./$(DEPDIR)/btWheelInfo.Plo # am--include-marker
include ./$(DEPDIR)/gim_box_set.Plo # am--include-marker
include ./$(DEPDIR)/gim_contact.Plo # am--include-marker
include ./$(DEPDIR)/gim_memory.Plo # am--include-marker
include ./$(DEPDIR)/gim_tri_collision.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

btRaycastCallback.lo: BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btRaycastCallback.lo -MD -MP -MF $(DEPDIR)/btRaycastCallback.Tpo -c -o btRaycastCallback.lo `test -f 'BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btRaycastCallback.Tpo $(DEPDIR)/btRaycastCallback.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp' object='btRaycastCallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btRaycastCallback.lo `test -f 'BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp

btMinkowskiPenetrationDepthSolver.lo: BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btMinkowskiPenetrationDepthSolver.lo -MD -MP -MF $(DEPDIR)/btMinkowskiPenetrationDepthSolver.Tpo -c -o btMinkowskiPenetrationDepthSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btMinkowskiPenetrationDepthSolver.Tpo $(DEPDIR)/btMinkowskiPenetrationDepthSolver.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp' object='btMinkowskiPenetrationDepthSolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btMinkowskiPenetrationDepthSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp

btSubSimplexConvexCast.lo: BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSubSimplexConvexCast.lo -MD -MP -MF $(DEPDIR)/btSubSimplexConvexCast.Tpo -c -o btSubSimplexConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSubSimplexConvexCast.Tpo $(DEPDIR)/btSubSimplexConvexCast.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp' object='btSubSimplexConvexCast.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSubSimplexConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp

btGjkEpaPenetrationDepthSolver.lo: BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGjkEpaPenetrationDepthSolver.lo -MD -MP -MF $(DEPDIR)/btGjkEpaPenetrationDepthSolver.Tpo -c -o btGjkEpaPenetrationDepthSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGjkEpaPenetrationDepthSolver.Tpo $(DEPDIR)/btGjkEpaPenetrationDepthSolver.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp' object='btGjkEpaPenetrationDepthSolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGjkEpaPenetrationDepthSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp

btGjkConvexCast.lo: BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGjkConvexCast.lo -MD -MP -MF $(DEPDIR)/btGjkConvexCast.Tpo -c -o btGjkConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGjkConvexCast.Tpo $(DEPDIR)/btGjkConvexCast.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp' object='btGjkConvexCast.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGjkConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp

btPersistentManifold.lo: BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btPersistentManifold.lo -MD -MP -MF $(DEPDIR)/btPersistentManifold.Tpo -c -o btPersistentManifold.lo `test -f 'BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btPersistentManifold.Tpo $(DEPDIR)/btPersistentManifold.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp' object='btPersistentManifold.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btPersistentManifold.lo `test -f 'BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp

btConvexCast.lo: BulletCollision/NarrowPhaseCollision/btConvexCast.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexCast.lo -MD -MP -MF $(DEPDIR)/btConvexCast.Tpo -c -o btConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btConvexCast.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexCast.Tpo $(DEPDIR)/btConvexCast.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btConvexCast.cpp' object='btConvexCast.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexCast.lo `test -f 'BulletCollision/NarrowPhaseCollision/btConvexCast.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btConvexCast.cpp

btContinuousConvexCollision.lo: BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btContinuousConvexCollision.lo -MD -MP -MF $(DEPDIR)/btContinuousConvexCollision.Tpo -c -o btContinuousConvexCollision.lo `test -f 'BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btContinuousConvexCollision.Tpo $(DEPDIR)/btContinuousConvexCollision.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp' object='btContinuousConvexCollision.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btContinuousConvexCollision.lo `test -f 'BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp

btGjkPairDetector.lo: BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGjkPairDetector.lo -MD -MP -MF $(DEPDIR)/btGjkPairDetector.Tpo -c -o btGjkPairDetector.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGjkPairDetector.Tpo $(DEPDIR)/btGjkPairDetector.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp' object='btGjkPairDetector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGjkPairDetector.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp

btGjkEpa2.lo: BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGjkEpa2.lo -MD -MP -MF $(DEPDIR)/btGjkEpa2.Tpo -c -o btGjkEpa2.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGjkEpa2.Tpo $(DEPDIR)/btGjkEpa2.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp' object='btGjkEpa2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGjkEpa2.lo `test -f 'BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp

btVoronoiSimplexSolver.lo: BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btVoronoiSimplexSolver.lo -MD -MP -MF $(DEPDIR)/btVoronoiSimplexSolver.Tpo -c -o btVoronoiSimplexSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btVoronoiSimplexSolver.Tpo $(DEPDIR)/btVoronoiSimplexSolver.Plo
#	$(AM_V_CXX)source='BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp' object='btVoronoiSimplexSolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btVoronoiSimplexSolver.lo `test -f 'BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp' || echo '$(srcdir)/'`BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp

btActivatingCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btActivatingCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btActivatingCollisionAlgorithm.Tpo -c -o btActivatingCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btActivatingCollisionAlgorithm.Tpo $(DEPDIR)/btActivatingCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp' object='btActivatingCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btActivatingCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp

btCollisionObject.lo: BulletCollision/CollisionDispatch/btCollisionObject.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCollisionObject.lo -MD -MP -MF $(DEPDIR)/btCollisionObject.Tpo -c -o btCollisionObject.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionObject.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionObject.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCollisionObject.Tpo $(DEPDIR)/btCollisionObject.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btCollisionObject.cpp' object='btCollisionObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCollisionObject.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionObject.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionObject.cpp

btEmptyCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btEmptyCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btEmptyCollisionAlgorithm.Tpo -c -o btEmptyCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btEmptyCollisionAlgorithm.Tpo $(DEPDIR)/btEmptyCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp' object='btEmptyCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btEmptyCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp

btGhostObject.lo: BulletCollision/CollisionDispatch/btGhostObject.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGhostObject.lo -MD -MP -MF $(DEPDIR)/btGhostObject.Tpo -c -o btGhostObject.lo `test -f 'BulletCollision/CollisionDispatch/btGhostObject.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btGhostObject.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGhostObject.Tpo $(DEPDIR)/btGhostObject.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btGhostObject.cpp' object='btGhostObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGhostObject.lo `test -f 'BulletCollision/CollisionDispatch/btGhostObject.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btGhostObject.cpp

btSphereSphereCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSphereSphereCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSphereSphereCollisionAlgorithm.Tpo -c -o btSphereSphereCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSphereSphereCollisionAlgorithm.Tpo $(DEPDIR)/btSphereSphereCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp' object='btSphereSphereCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSphereSphereCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp

btSphereBoxCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSphereBoxCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSphereBoxCollisionAlgorithm.Tpo -c -o btSphereBoxCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSphereBoxCollisionAlgorithm.Tpo $(DEPDIR)/btSphereBoxCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp' object='btSphereBoxCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSphereBoxCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp

btCollisionDispatcher.lo: BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCollisionDispatcher.lo -MD -MP -MF $(DEPDIR)/btCollisionDispatcher.Tpo -c -o btCollisionDispatcher.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCollisionDispatcher.Tpo $(DEPDIR)/btCollisionDispatcher.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp' object='btCollisionDispatcher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCollisionDispatcher.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp

btDefaultCollisionConfiguration.lo: BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btDefaultCollisionConfiguration.lo -MD -MP -MF $(DEPDIR)/btDefaultCollisionConfiguration.Tpo -c -o btDefaultCollisionConfiguration.lo `test -f 'BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btDefaultCollisionConfiguration.Tpo $(DEPDIR)/btDefaultCollisionConfiguration.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp' object='btDefaultCollisionConfiguration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btDefaultCollisionConfiguration.lo `test -f 'BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp

btSimulationIslandManager.lo: BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSimulationIslandManager.lo -MD -MP -MF $(DEPDIR)/btSimulationIslandManager.Tpo -c -o btSimulationIslandManager.lo `test -f 'BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSimulationIslandManager.Tpo $(DEPDIR)/btSimulationIslandManager.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp' object='btSimulationIslandManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSimulationIslandManager.lo `test -f 'BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp

btBoxBoxDetector.lo: BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btBoxBoxDetector.lo -MD -MP -MF $(DEPDIR)/btBoxBoxDetector.Tpo -c -o btBoxBoxDetector.lo `test -f 'BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btBoxBoxDetector.Tpo $(DEPDIR)/btBoxBoxDetector.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp' object='btBoxBoxDetector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btBoxBoxDetector.lo `test -f 'BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp

btConvexPlaneCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexPlaneCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btConvexPlaneCollisionAlgorithm.Tpo -c -o btConvexPlaneCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexPlaneCollisionAlgorithm.Tpo $(DEPDIR)/btConvexPlaneCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp' object='btConvexPlaneCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexPlaneCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp

btConvexConcaveCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexConcaveCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btConvexConcaveCollisionAlgorithm.Tpo -c -o btConvexConcaveCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexConcaveCollisionAlgorithm.Tpo $(DEPDIR)/btConvexConcaveCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp' object='btConvexConcaveCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexConcaveCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp

btBoxBoxCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btBoxBoxCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btBoxBoxCollisionAlgorithm.Tpo -c -o btBoxBoxCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btBoxBoxCollisionAlgorithm.Tpo $(DEPDIR)/btBoxBoxCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp' object='btBoxBoxCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btBoxBoxCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp

SphereTriangleDetector.lo: BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SphereTriangleDetector.lo -MD -MP -MF $(DEPDIR)/SphereTriangleDetector.Tpo -c -o SphereTriangleDetector.lo `test -f 'BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SphereTriangleDetector.Tpo $(DEPDIR)/SphereTriangleDetector.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp' object='SphereTriangleDetector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SphereTriangleDetector.lo `test -f 'BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp

btManifoldResult.lo: BulletCollision/CollisionDispatch/btManifoldResult.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btManifoldResult.lo -MD -MP -MF $(DEPDIR)/btManifoldResult.Tpo -c -o btManifoldResult.lo `test -f 'BulletCollision/CollisionDispatch/btManifoldResult.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btManifoldResult.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btManifoldResult.Tpo $(DEPDIR)/btManifoldResult.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btManifoldResult.cpp' object='btManifoldResult.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btManifoldResult.lo `test -f 'BulletCollision/CollisionDispatch/btManifoldResult.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btManifoldResult.cpp

btCollisionWorld.lo: BulletCollision/CollisionDispatch/btCollisionWorld.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCollisionWorld.lo -MD -MP -MF $(DEPDIR)/btCollisionWorld.Tpo -c -o btCollisionWorld.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionWorld.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionWorld.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCollisionWorld.Tpo $(DEPDIR)/btCollisionWorld.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btCollisionWorld.cpp' object='btCollisionWorld.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCollisionWorld.lo `test -f 'BulletCollision/CollisionDispatch/btCollisionWorld.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCollisionWorld.cpp

btSphereTriangleCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSphereTriangleCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSphereTriangleCollisionAlgorithm.Tpo -c -o btSphereTriangleCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSphereTriangleCollisionAlgorithm.Tpo $(DEPDIR)/btSphereTriangleCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp' object='btSphereTriangleCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSphereTriangleCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp

btConvexConvexAlgorithm.lo: BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexConvexAlgorithm.lo -MD -MP -MF $(DEPDIR)/btConvexConvexAlgorithm.Tpo -c -o btConvexConvexAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexConvexAlgorithm.Tpo $(DEPDIR)/btConvexConvexAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp' object='btConvexConvexAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexConvexAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp

btUnionFind.lo: BulletCollision/CollisionDispatch/btUnionFind.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btUnionFind.lo -MD -MP -MF $(DEPDIR)/btUnionFind.Tpo -c -o btUnionFind.lo `test -f 'BulletCollision/CollisionDispatch/btUnionFind.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btUnionFind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btUnionFind.Tpo $(DEPDIR)/btUnionFind.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btUnionFind.cpp' object='btUnionFind.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btUnionFind.lo `test -f 'BulletCollision/CollisionDispatch/btUnionFind.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btUnionFind.cpp

btCompoundCollisionAlgorithm.lo: BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCompoundCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btCompoundCollisionAlgorithm.Tpo -c -o btCompoundCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCompoundCollisionAlgorithm.Tpo $(DEPDIR)/btCompoundCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp' object='btCompoundCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCompoundCollisionAlgorithm.lo `test -f 'BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp

btTetrahedronShape.lo: BulletCollision/CollisionShapes/btTetrahedronShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTetrahedronShape.lo -MD -MP -MF $(DEPDIR)/btTetrahedronShape.Tpo -c -o btTetrahedronShape.lo `test -f 'BulletCollision/CollisionShapes/btTetrahedronShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTetrahedronShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTetrahedronShape.Tpo $(DEPDIR)/btTetrahedronShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTetrahedronShape.cpp' object='btTetrahedronShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTetrahedronShape.lo `test -f 'BulletCollision/CollisionShapes/btTetrahedronShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTetrahedronShape.cpp

btShapeHull.lo: BulletCollision/CollisionShapes/btShapeHull.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btShapeHull.lo -MD -MP -MF $(DEPDIR)/btShapeHull.Tpo -c -o btShapeHull.lo `test -f 'BulletCollision/CollisionShapes/btShapeHull.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btShapeHull.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btShapeHull.Tpo $(DEPDIR)/btShapeHull.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btShapeHull.cpp' object='btShapeHull.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btShapeHull.lo `test -f 'BulletCollision/CollisionShapes/btShapeHull.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btShapeHull.cpp

btMinkowskiSumShape.lo: BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btMinkowskiSumShape.lo -MD -MP -MF $(DEPDIR)/btMinkowskiSumShape.Tpo -c -o btMinkowskiSumShape.lo `test -f 'BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btMinkowskiSumShape.Tpo $(DEPDIR)/btMinkowskiSumShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp' object='btMinkowskiSumShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btMinkowskiSumShape.lo `test -f 'BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp

btCompoundShape.lo: BulletCollision/CollisionShapes/btCompoundShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCompoundShape.lo -MD -MP -MF $(DEPDIR)/btCompoundShape.Tpo -c -o btCompoundShape.lo `test -f 'BulletCollision/CollisionShapes/btCompoundShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCompoundShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCompoundShape.Tpo $(DEPDIR)/btCompoundShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btCompoundShape.cpp' object='btCompoundShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCompoundShape.lo `test -f 'BulletCollision/CollisionShapes/btCompoundShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCompoundShape.cpp

btConeShape.lo: BulletCollision/CollisionShapes/btConeShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConeShape.lo -MD -MP -MF $(DEPDIR)/btConeShape.Tpo -c -o btConeShape.lo `test -f 'BulletCollision/CollisionShapes/btConeShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConeShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConeShape.Tpo $(DEPDIR)/btConeShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConeShape.cpp' object='btConeShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConeShape.lo `test -f 'BulletCollision/CollisionShapes/btConeShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConeShape.cpp

btMultiSphereShape.lo: BulletCollision/CollisionShapes/btMultiSphereShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btMultiSphereShape.lo -MD -MP -MF $(DEPDIR)/btMultiSphereShape.Tpo -c -o btMultiSphereShape.lo `test -f 'BulletCollision/CollisionShapes/btMultiSphereShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMultiSphereShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btMultiSphereShape.Tpo $(DEPDIR)/btMultiSphereShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btMultiSphereShape.cpp' object='btMultiSphereShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btMultiSphereShape.lo `test -f 'BulletCollision/CollisionShapes/btMultiSphereShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMultiSphereShape.cpp

btUniformScalingShape.lo: BulletCollision/CollisionShapes/btUniformScalingShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btUniformScalingShape.lo -MD -MP -MF $(DEPDIR)/btUniformScalingShape.Tpo -c -o btUniformScalingShape.lo `test -f 'BulletCollision/CollisionShapes/btUniformScalingShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btUniformScalingShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btUniformScalingShape.Tpo $(DEPDIR)/btUniformScalingShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btUniformScalingShape.cpp' object='btUniformScalingShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btUniformScalingShape.lo `test -f 'BulletCollision/CollisionShapes/btUniformScalingShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btUniformScalingShape.cpp

btSphereShape.lo: BulletCollision/CollisionShapes/btSphereShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSphereShape.lo -MD -MP -MF $(DEPDIR)/btSphereShape.Tpo -c -o btSphereShape.lo `test -f 'BulletCollision/CollisionShapes/btSphereShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btSphereShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSphereShape.Tpo $(DEPDIR)/btSphereShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btSphereShape.cpp' object='btSphereShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSphereShape.lo `test -f 'BulletCollision/CollisionShapes/btSphereShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btSphereShape.cpp

btTriangleIndexVertexArray.lo: BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleIndexVertexArray.lo -MD -MP -MF $(DEPDIR)/btTriangleIndexVertexArray.Tpo -c -o btTriangleIndexVertexArray.lo `test -f 'BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleIndexVertexArray.Tpo $(DEPDIR)/btTriangleIndexVertexArray.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp' object='btTriangleIndexVertexArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleIndexVertexArray.lo `test -f 'BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp

btBvhTriangleMeshShape.lo: BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btBvhTriangleMeshShape.lo -MD -MP -MF $(DEPDIR)/btBvhTriangleMeshShape.Tpo -c -o btBvhTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btBvhTriangleMeshShape.Tpo $(DEPDIR)/btBvhTriangleMeshShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp' object='btBvhTriangleMeshShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btBvhTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp

btTriangleMeshShape.lo: BulletCollision/CollisionShapes/btTriangleMeshShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleMeshShape.lo -MD -MP -MF $(DEPDIR)/btTriangleMeshShape.Tpo -c -o btTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleMeshShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleMeshShape.Tpo $(DEPDIR)/btTriangleMeshShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleMeshShape.cpp' object='btTriangleMeshShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleMeshShape.cpp

btTriangleBuffer.lo: BulletCollision/CollisionShapes/btTriangleBuffer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleBuffer.lo -MD -MP -MF $(DEPDIR)/btTriangleBuffer.Tpo -c -o btTriangleBuffer.lo `test -f 'BulletCollision/CollisionShapes/btTriangleBuffer.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleBuffer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleBuffer.Tpo $(DEPDIR)/btTriangleBuffer.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleBuffer.cpp' object='btTriangleBuffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleBuffer.lo `test -f 'BulletCollision/CollisionShapes/btTriangleBuffer.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleBuffer.cpp

btStaticPlaneShape.lo: BulletCollision/CollisionShapes/btStaticPlaneShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btStaticPlaneShape.lo -MD -MP -MF $(DEPDIR)/btStaticPlaneShape.Tpo -c -o btStaticPlaneShape.lo `test -f 'BulletCollision/CollisionShapes/btStaticPlaneShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btStaticPlaneShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btStaticPlaneShape.Tpo $(DEPDIR)/btStaticPlaneShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btStaticPlaneShape.cpp' object='btStaticPlaneShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btStaticPlaneShape.lo `test -f 'BulletCollision/CollisionShapes/btStaticPlaneShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btStaticPlaneShape.cpp

btPolyhedralConvexShape.lo: BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btPolyhedralConvexShape.lo -MD -MP -MF $(DEPDIR)/btPolyhedralConvexShape.Tpo -c -o btPolyhedralConvexShape.lo `test -f 'BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btPolyhedralConvexShape.Tpo $(DEPDIR)/btPolyhedralConvexShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp' object='btPolyhedralConvexShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btPolyhedralConvexShape.lo `test -f 'BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp

btEmptyShape.lo: BulletCollision/CollisionShapes/btEmptyShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btEmptyShape.lo -MD -MP -MF $(DEPDIR)/btEmptyShape.Tpo -c -o btEmptyShape.lo `test -f 'BulletCollision/CollisionShapes/btEmptyShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btEmptyShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btEmptyShape.Tpo $(DEPDIR)/btEmptyShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btEmptyShape.cpp' object='btEmptyShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btEmptyShape.lo `test -f 'BulletCollision/CollisionShapes/btEmptyShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btEmptyShape.cpp

btCollisionShape.lo: BulletCollision/CollisionShapes/btCollisionShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCollisionShape.lo -MD -MP -MF $(DEPDIR)/btCollisionShape.Tpo -c -o btCollisionShape.lo `test -f 'BulletCollision/CollisionShapes/btCollisionShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCollisionShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCollisionShape.Tpo $(DEPDIR)/btCollisionShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btCollisionShape.cpp' object='btCollisionShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCollisionShape.lo `test -f 'BulletCollision/CollisionShapes/btCollisionShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCollisionShape.cpp

btConvexShape.lo: BulletCollision/CollisionShapes/btConvexShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexShape.lo -MD -MP -MF $(DEPDIR)/btConvexShape.Tpo -c -o btConvexShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexShape.Tpo $(DEPDIR)/btConvexShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConvexShape.cpp' object='btConvexShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexShape.cpp

btConvexInternalShape.lo: BulletCollision/CollisionShapes/btConvexInternalShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexInternalShape.lo -MD -MP -MF $(DEPDIR)/btConvexInternalShape.Tpo -c -o btConvexInternalShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexInternalShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexInternalShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexInternalShape.Tpo $(DEPDIR)/btConvexInternalShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConvexInternalShape.cpp' object='btConvexInternalShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexInternalShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexInternalShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexInternalShape.cpp

btConvexHullShape.lo: BulletCollision/CollisionShapes/btConvexHullShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexHullShape.lo -MD -MP -MF $(DEPDIR)/btConvexHullShape.Tpo -c -o btConvexHullShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexHullShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexHullShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexHullShape.Tpo $(DEPDIR)/btConvexHullShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConvexHullShape.cpp' object='btConvexHullShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexHullShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexHullShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexHullShape.cpp

btTriangleCallback.lo: BulletCollision/CollisionShapes/btTriangleCallback.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleCallback.lo -MD -MP -MF $(DEPDIR)/btTriangleCallback.Tpo -c -o btTriangleCallback.lo `test -f 'BulletCollision/CollisionShapes/btTriangleCallback.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleCallback.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleCallback.Tpo $(DEPDIR)/btTriangleCallback.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleCallback.cpp' object='btTriangleCallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleCallback.lo `test -f 'BulletCollision/CollisionShapes/btTriangleCallback.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleCallback.cpp

btCapsuleShape.lo: BulletCollision/CollisionShapes/btCapsuleShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCapsuleShape.lo -MD -MP -MF $(DEPDIR)/btCapsuleShape.Tpo -c -o btCapsuleShape.lo `test -f 'BulletCollision/CollisionShapes/btCapsuleShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCapsuleShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCapsuleShape.Tpo $(DEPDIR)/btCapsuleShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btCapsuleShape.cpp' object='btCapsuleShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCapsuleShape.lo `test -f 'BulletCollision/CollisionShapes/btCapsuleShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCapsuleShape.cpp

btConvexTriangleMeshShape.lo: BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexTriangleMeshShape.lo -MD -MP -MF $(DEPDIR)/btConvexTriangleMeshShape.Tpo -c -o btConvexTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexTriangleMeshShape.Tpo $(DEPDIR)/btConvexTriangleMeshShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp' object='btConvexTriangleMeshShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp

btConcaveShape.lo: BulletCollision/CollisionShapes/btConcaveShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConcaveShape.lo -MD -MP -MF $(DEPDIR)/btConcaveShape.Tpo -c -o btConcaveShape.lo `test -f 'BulletCollision/CollisionShapes/btConcaveShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConcaveShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConcaveShape.Tpo $(DEPDIR)/btConcaveShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConcaveShape.cpp' object='btConcaveShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConcaveShape.lo `test -f 'BulletCollision/CollisionShapes/btConcaveShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConcaveShape.cpp

btConvexPointCloudShape.lo: BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexPointCloudShape.lo -MD -MP -MF $(DEPDIR)/btConvexPointCloudShape.Tpo -c -o btConvexPointCloudShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexPointCloudShape.Tpo $(DEPDIR)/btConvexPointCloudShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp' object='btConvexPointCloudShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexPointCloudShape.lo `test -f 'BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp

btBoxShape.lo: BulletCollision/CollisionShapes/btBoxShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btBoxShape.lo -MD -MP -MF $(DEPDIR)/btBoxShape.Tpo -c -o btBoxShape.lo `test -f 'BulletCollision/CollisionShapes/btBoxShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btBoxShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btBoxShape.Tpo $(DEPDIR)/btBoxShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btBoxShape.cpp' object='btBoxShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btBoxShape.lo `test -f 'BulletCollision/CollisionShapes/btBoxShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btBoxShape.cpp

btOptimizedBvh.lo: BulletCollision/CollisionShapes/btOptimizedBvh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btOptimizedBvh.lo -MD -MP -MF $(DEPDIR)/btOptimizedBvh.Tpo -c -o btOptimizedBvh.lo `test -f 'BulletCollision/CollisionShapes/btOptimizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btOptimizedBvh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btOptimizedBvh.Tpo $(DEPDIR)/btOptimizedBvh.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btOptimizedBvh.cpp' object='btOptimizedBvh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btOptimizedBvh.lo `test -f 'BulletCollision/CollisionShapes/btOptimizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btOptimizedBvh.cpp

btHeightfieldTerrainShape.lo: BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btHeightfieldTerrainShape.lo -MD -MP -MF $(DEPDIR)/btHeightfieldTerrainShape.Tpo -c -o btHeightfieldTerrainShape.lo `test -f 'BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btHeightfieldTerrainShape.Tpo $(DEPDIR)/btHeightfieldTerrainShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp' object='btHeightfieldTerrainShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btHeightfieldTerrainShape.lo `test -f 'BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp

btMultimaterialTriangleMeshShape.lo: BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btMultimaterialTriangleMeshShape.lo -MD -MP -MF $(DEPDIR)/btMultimaterialTriangleMeshShape.Tpo -c -o btMultimaterialTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btMultimaterialTriangleMeshShape.Tpo $(DEPDIR)/btMultimaterialTriangleMeshShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp' object='btMultimaterialTriangleMeshShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btMultimaterialTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp

btCylinderShape.lo: BulletCollision/CollisionShapes/btCylinderShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCylinderShape.lo -MD -MP -MF $(DEPDIR)/btCylinderShape.Tpo -c -o btCylinderShape.lo `test -f 'BulletCollision/CollisionShapes/btCylinderShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCylinderShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCylinderShape.Tpo $(DEPDIR)/btCylinderShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btCylinderShape.cpp' object='btCylinderShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCylinderShape.lo `test -f 'BulletCollision/CollisionShapes/btCylinderShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btCylinderShape.cpp

btScaledBvhTriangleMeshShape.lo: BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btScaledBvhTriangleMeshShape.lo -MD -MP -MF $(DEPDIR)/btScaledBvhTriangleMeshShape.Tpo -c -o btScaledBvhTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btScaledBvhTriangleMeshShape.Tpo $(DEPDIR)/btScaledBvhTriangleMeshShape.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp' object='btScaledBvhTriangleMeshShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btScaledBvhTriangleMeshShape.lo `test -f 'BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp

btStridingMeshInterface.lo: BulletCollision/CollisionShapes/btStridingMeshInterface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btStridingMeshInterface.lo -MD -MP -MF $(DEPDIR)/btStridingMeshInterface.Tpo -c -o btStridingMeshInterface.lo `test -f 'BulletCollision/CollisionShapes/btStridingMeshInterface.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btStridingMeshInterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btStridingMeshInterface.Tpo $(DEPDIR)/btStridingMeshInterface.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btStridingMeshInterface.cpp' object='btStridingMeshInterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btStridingMeshInterface.lo `test -f 'BulletCollision/CollisionShapes/btStridingMeshInterface.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btStridingMeshInterface.cpp

btTriangleIndexVertexMaterialArray.lo: BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleIndexVertexMaterialArray.lo -MD -MP -MF $(DEPDIR)/btTriangleIndexVertexMaterialArray.Tpo -c -o btTriangleIndexVertexMaterialArray.lo `test -f 'BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleIndexVertexMaterialArray.Tpo $(DEPDIR)/btTriangleIndexVertexMaterialArray.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp' object='btTriangleIndexVertexMaterialArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleIndexVertexMaterialArray.lo `test -f 'BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp

btTriangleMesh.lo: BulletCollision/CollisionShapes/btTriangleMesh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleMesh.lo -MD -MP -MF $(DEPDIR)/btTriangleMesh.Tpo -c -o btTriangleMesh.lo `test -f 'BulletCollision/CollisionShapes/btTriangleMesh.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleMesh.Tpo $(DEPDIR)/btTriangleMesh.Plo
#	$(AM_V_CXX)source='BulletCollision/CollisionShapes/btTriangleMesh.cpp' object='btTriangleMesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleMesh.lo `test -f 'BulletCollision/CollisionShapes/btTriangleMesh.cpp' || echo '$(srcdir)/'`BulletCollision/CollisionShapes/btTriangleMesh.cpp

btAxisSweep3.lo: BulletCollision/BroadphaseCollision/btAxisSweep3.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btAxisSweep3.lo -MD -MP -MF $(DEPDIR)/btAxisSweep3.Tpo -c -o btAxisSweep3.lo `test -f 'BulletCollision/BroadphaseCollision/btAxisSweep3.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btAxisSweep3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btAxisSweep3.Tpo $(DEPDIR)/btAxisSweep3.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btAxisSweep3.cpp' object='btAxisSweep3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btAxisSweep3.lo `test -f 'BulletCollision/BroadphaseCollision/btAxisSweep3.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btAxisSweep3.cpp

btOverlappingPairCache.lo: BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btOverlappingPairCache.lo -MD -MP -MF $(DEPDIR)/btOverlappingPairCache.Tpo -c -o btOverlappingPairCache.lo `test -f 'BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btOverlappingPairCache.Tpo $(DEPDIR)/btOverlappingPairCache.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp' object='btOverlappingPairCache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btOverlappingPairCache.lo `test -f 'BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp

btDbvtBroadphase.lo: BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btDbvtBroadphase.lo -MD -MP -MF $(DEPDIR)/btDbvtBroadphase.Tpo -c -o btDbvtBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btDbvtBroadphase.Tpo $(DEPDIR)/btDbvtBroadphase.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp' object='btDbvtBroadphase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btDbvtBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp

btMultiSapBroadphase.lo: BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btMultiSapBroadphase.lo -MD -MP -MF $(DEPDIR)/btMultiSapBroadphase.Tpo -c -o btMultiSapBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btMultiSapBroadphase.Tpo $(DEPDIR)/btMultiSapBroadphase.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp' object='btMultiSapBroadphase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btMultiSapBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp

btDispatcher.lo: BulletCollision/BroadphaseCollision/btDispatcher.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btDispatcher.lo -MD -MP -MF $(DEPDIR)/btDispatcher.Tpo -c -o btDispatcher.lo `test -f 'BulletCollision/BroadphaseCollision/btDispatcher.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDispatcher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btDispatcher.Tpo $(DEPDIR)/btDispatcher.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btDispatcher.cpp' object='btDispatcher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btDispatcher.lo `test -f 'BulletCollision/BroadphaseCollision/btDispatcher.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDispatcher.cpp

btBroadphaseProxy.lo: BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btBroadphaseProxy.lo -MD -MP -MF $(DEPDIR)/btBroadphaseProxy.Tpo -c -o btBroadphaseProxy.lo `test -f 'BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btBroadphaseProxy.Tpo $(DEPDIR)/btBroadphaseProxy.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp' object='btBroadphaseProxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btBroadphaseProxy.lo `test -f 'BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp

btQuantizedBvh.lo: BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btQuantizedBvh.lo -MD -MP -MF $(DEPDIR)/btQuantizedBvh.Tpo -c -o btQuantizedBvh.lo `test -f 'BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btQuantizedBvh.Tpo $(DEPDIR)/btQuantizedBvh.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp' object='btQuantizedBvh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btQuantizedBvh.lo `test -f 'BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp

btCollisionAlgorithm.lo: BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btCollisionAlgorithm.Tpo -c -o btCollisionAlgorithm.lo `test -f 'BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btCollisionAlgorithm.Tpo $(DEPDIR)/btCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp' object='btCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btCollisionAlgorithm.lo `test -f 'BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp

btDbvt.lo: BulletCollision/BroadphaseCollision/btDbvt.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btDbvt.lo -MD -MP -MF $(DEPDIR)/btDbvt.Tpo -c -o btDbvt.lo `test -f 'BulletCollision/BroadphaseCollision/btDbvt.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDbvt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btDbvt.Tpo $(DEPDIR)/btDbvt.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btDbvt.cpp' object='btDbvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btDbvt.lo `test -f 'BulletCollision/BroadphaseCollision/btDbvt.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btDbvt.cpp

btSimpleBroadphase.lo: BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSimpleBroadphase.lo -MD -MP -MF $(DEPDIR)/btSimpleBroadphase.Tpo -c -o btSimpleBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSimpleBroadphase.Tpo $(DEPDIR)/btSimpleBroadphase.Plo
#	$(AM_V_CXX)source='BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp' object='btSimpleBroadphase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSimpleBroadphase.lo `test -f 'BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp' || echo '$(srcdir)/'`BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp

btGImpactBvh.lo: BulletCollision/Gimpact/btGImpactBvh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGImpactBvh.lo -MD -MP -MF $(DEPDIR)/btGImpactBvh.Tpo -c -o btGImpactBvh.lo `test -f 'BulletCollision/Gimpact/btGImpactBvh.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactBvh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGImpactBvh.Tpo $(DEPDIR)/btGImpactBvh.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/btGImpactBvh.cpp' object='btGImpactBvh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGImpactBvh.lo `test -f 'BulletCollision/Gimpact/btGImpactBvh.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactBvh.cpp

btGImpactQuantizedBvh.lo: BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGImpactQuantizedBvh.lo -MD -MP -MF $(DEPDIR)/btGImpactQuantizedBvh.Tpo -c -o btGImpactQuantizedBvh.lo `test -f 'BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGImpactQuantizedBvh.Tpo $(DEPDIR)/btGImpactQuantizedBvh.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp' object='btGImpactQuantizedBvh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGImpactQuantizedBvh.lo `test -f 'BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp

btTriangleShapeEx.lo: BulletCollision/Gimpact/btTriangleShapeEx.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTriangleShapeEx.lo -MD -MP -MF $(DEPDIR)/btTriangleShapeEx.Tpo -c -o btTriangleShapeEx.lo `test -f 'BulletCollision/Gimpact/btTriangleShapeEx.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btTriangleShapeEx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTriangleShapeEx.Tpo $(DEPDIR)/btTriangleShapeEx.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/btTriangleShapeEx.cpp' object='btTriangleShapeEx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTriangleShapeEx.lo `test -f 'BulletCollision/Gimpact/btTriangleShapeEx.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btTriangleShapeEx.cpp

btGImpactCollisionAlgorithm.lo: BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGImpactCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btGImpactCollisionAlgorithm.Tpo -c -o btGImpactCollisionAlgorithm.lo `test -f 'BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGImpactCollisionAlgorithm.Tpo $(DEPDIR)/btGImpactCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp' object='btGImpactCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGImpactCollisionAlgorithm.lo `test -f 'BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp

btGImpactShape.lo: BulletCollision/Gimpact/btGImpactShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGImpactShape.lo -MD -MP -MF $(DEPDIR)/btGImpactShape.Tpo -c -o btGImpactShape.lo `test -f 'BulletCollision/Gimpact/btGImpactShape.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGImpactShape.Tpo $(DEPDIR)/btGImpactShape.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/btGImpactShape.cpp' object='btGImpactShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGImpactShape.lo `test -f 'BulletCollision/Gimpact/btGImpactShape.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/btGImpactShape.cpp

gim_box_set.lo: BulletCollision/Gimpact/gim_box_set.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gim_box_set.lo -MD -MP -MF $(DEPDIR)/gim_box_set.Tpo -c -o gim_box_set.lo `test -f 'BulletCollision/Gimpact/gim_box_set.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_box_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gim_box_set.Tpo $(DEPDIR)/gim_box_set.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/gim_box_set.cpp' object='gim_box_set.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gim_box_set.lo `test -f 'BulletCollision/Gimpact/gim_box_set.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_box_set.cpp

gim_contact.lo: BulletCollision/Gimpact/gim_contact.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gim_contact.lo -MD -MP -MF $(DEPDIR)/gim_contact.Tpo -c -o gim_contact.lo `test -f 'BulletCollision/Gimpact/gim_contact.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_contact.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gim_contact.Tpo $(DEPDIR)/gim_contact.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/gim_contact.cpp' object='gim_contact.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gim_contact.lo `test -f 'BulletCollision/Gimpact/gim_contact.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_contact.cpp

gim_memory.lo: BulletCollision/Gimpact/gim_memory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gim_memory.lo -MD -MP -MF $(DEPDIR)/gim_memory.Tpo -c -o gim_memory.lo `test -f 'BulletCollision/Gimpact/gim_memory.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_memory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gim_memory.Tpo $(DEPDIR)/gim_memory.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/gim_memory.cpp' object='gim_memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gim_memory.lo `test -f 'BulletCollision/Gimpact/gim_memory.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_memory.cpp

gim_tri_collision.lo: BulletCollision/Gimpact/gim_tri_collision.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gim_tri_collision.lo -MD -MP -MF $(DEPDIR)/gim_tri_collision.Tpo -c -o gim_tri_collision.lo `test -f 'BulletCollision/Gimpact/gim_tri_collision.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_tri_collision.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gim_tri_collision.Tpo $(DEPDIR)/gim_tri_collision.Plo
#	$(AM_V_CXX)source='BulletCollision/Gimpact/gim_tri_collision.cpp' object='gim_tri_collision.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gim_tri_collision.lo `test -f 'BulletCollision/Gimpact/gim_tri_collision.cpp' || echo '$(srcdir)/'`BulletCollision/Gimpact/gim_tri_collision.cpp

btContinuousDynamicsWorld.lo: BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btContinuousDynamicsWorld.lo -MD -MP -MF $(DEPDIR)/btContinuousDynamicsWorld.Tpo -c -o btContinuousDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btContinuousDynamicsWorld.Tpo $(DEPDIR)/btContinuousDynamicsWorld.Plo
#	$(AM_V_CXX)source='BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp' object='btContinuousDynamicsWorld.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btContinuousDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btContinuousDynamicsWorld.cpp

btRigidBody.lo: BulletDynamics/Dynamics/btRigidBody.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btRigidBody.lo -MD -MP -MF $(DEPDIR)/btRigidBody.Tpo -c -o btRigidBody.lo `test -f 'BulletDynamics/Dynamics/btRigidBody.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btRigidBody.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btRigidBody.Tpo $(DEPDIR)/btRigidBody.Plo
#	$(AM_V_CXX)source='BulletDynamics/Dynamics/btRigidBody.cpp' object='btRigidBody.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btRigidBody.lo `test -f 'BulletDynamics/Dynamics/btRigidBody.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btRigidBody.cpp

btSimpleDynamicsWorld.lo: BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSimpleDynamicsWorld.lo -MD -MP -MF $(DEPDIR)/btSimpleDynamicsWorld.Tpo -c -o btSimpleDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSimpleDynamicsWorld.Tpo $(DEPDIR)/btSimpleDynamicsWorld.Plo
#	$(AM_V_CXX)source='BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp' object='btSimpleDynamicsWorld.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSimpleDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp

Bullet-C-API.lo: BulletDynamics/Dynamics/Bullet-C-API.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Bullet-C-API.lo -MD -MP -MF $(DEPDIR)/Bullet-C-API.Tpo -c -o Bullet-C-API.lo `test -f 'BulletDynamics/Dynamics/Bullet-C-API.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/Bullet-C-API.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Bullet-C-API.Tpo $(DEPDIR)/Bullet-C-API.Plo
#	$(AM_V_CXX)source='BulletDynamics/Dynamics/Bullet-C-API.cpp' object='Bullet-C-API.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Bullet-C-API.lo `test -f 'BulletDynamics/Dynamics/Bullet-C-API.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/Bullet-C-API.cpp

btDiscreteDynamicsWorld.lo: BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btDiscreteDynamicsWorld.lo -MD -MP -MF $(DEPDIR)/btDiscreteDynamicsWorld.Tpo -c -o btDiscreteDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btDiscreteDynamicsWorld.Tpo $(DEPDIR)/btDiscreteDynamicsWorld.Plo
#	$(AM_V_CXX)source='BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp' object='btDiscreteDynamicsWorld.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btDiscreteDynamicsWorld.lo `test -f 'BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp

btGeneric6DofConstraint.lo: BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGeneric6DofConstraint.lo -MD -MP -MF $(DEPDIR)/btGeneric6DofConstraint.Tpo -c -o btGeneric6DofConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGeneric6DofConstraint.Tpo $(DEPDIR)/btGeneric6DofConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp' object='btGeneric6DofConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGeneric6DofConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp

btSolve2LinearConstraint.lo: BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSolve2LinearConstraint.lo -MD -MP -MF $(DEPDIR)/btSolve2LinearConstraint.Tpo -c -o btSolve2LinearConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSolve2LinearConstraint.Tpo $(DEPDIR)/btSolve2LinearConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp' object='btSolve2LinearConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSolve2LinearConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp

btPoint2PointConstraint.lo: BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btPoint2PointConstraint.lo -MD -MP -MF $(DEPDIR)/btPoint2PointConstraint.Tpo -c -o btPoint2PointConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btPoint2PointConstraint.Tpo $(DEPDIR)/btPoint2PointConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp' object='btPoint2PointConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btPoint2PointConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp

btTypedConstraint.lo: BulletDynamics/ConstraintSolver/btTypedConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btTypedConstraint.lo -MD -MP -MF $(DEPDIR)/btTypedConstraint.Tpo -c -o btTypedConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btTypedConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btTypedConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btTypedConstraint.Tpo $(DEPDIR)/btTypedConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btTypedConstraint.cpp' object='btTypedConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btTypedConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btTypedConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btTypedConstraint.cpp

btContactConstraint.lo: BulletDynamics/ConstraintSolver/btContactConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btContactConstraint.lo -MD -MP -MF $(DEPDIR)/btContactConstraint.Tpo -c -o btContactConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btContactConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btContactConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btContactConstraint.Tpo $(DEPDIR)/btContactConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btContactConstraint.cpp' object='btContactConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btContactConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btContactConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btContactConstraint.cpp

btSliderConstraint.lo: BulletDynamics/ConstraintSolver/btSliderConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSliderConstraint.lo -MD -MP -MF $(DEPDIR)/btSliderConstraint.Tpo -c -o btSliderConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btSliderConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSliderConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSliderConstraint.Tpo $(DEPDIR)/btSliderConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btSliderConstraint.cpp' object='btSliderConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSliderConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btSliderConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSliderConstraint.cpp

btConeTwistConstraint.lo: BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConeTwistConstraint.lo -MD -MP -MF $(DEPDIR)/btConeTwistConstraint.Tpo -c -o btConeTwistConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConeTwistConstraint.Tpo $(DEPDIR)/btConeTwistConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp' object='btConeTwistConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConeTwistConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp

btHingeConstraint.lo: BulletDynamics/ConstraintSolver/btHingeConstraint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btHingeConstraint.lo -MD -MP -MF $(DEPDIR)/btHingeConstraint.Tpo -c -o btHingeConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btHingeConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btHingeConstraint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btHingeConstraint.Tpo $(DEPDIR)/btHingeConstraint.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btHingeConstraint.cpp' object='btHingeConstraint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btHingeConstraint.lo `test -f 'BulletDynamics/ConstraintSolver/btHingeConstraint.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btHingeConstraint.cpp

btSequentialImpulseConstraintSolver.lo: BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSequentialImpulseConstraintSolver.lo -MD -MP -MF $(DEPDIR)/btSequentialImpulseConstraintSolver.Tpo -c -o btSequentialImpulseConstraintSolver.lo `test -f 'BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSequentialImpulseConstraintSolver.Tpo $(DEPDIR)/btSequentialImpulseConstraintSolver.Plo
#	$(AM_V_CXX)source='BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp' object='btSequentialImpulseConstraintSolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSequentialImpulseConstraintSolver.lo `test -f 'BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp' || echo '$(srcdir)/'`BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp

btWheelInfo.lo: BulletDynamics/Vehicle/btWheelInfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btWheelInfo.lo -MD -MP -MF $(DEPDIR)/btWheelInfo.Tpo -c -o btWheelInfo.lo `test -f 'BulletDynamics/Vehicle/btWheelInfo.cpp' || echo '$(srcdir)/'`BulletDynamics/Vehicle/btWheelInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btWheelInfo.Tpo $(DEPDIR)/btWheelInfo.Plo
#	$(AM_V_CXX)source='BulletDynamics/Vehicle/btWheelInfo.cpp' object='btWheelInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btWheelInfo.lo `test -f 'BulletDynamics/Vehicle/btWheelInfo.cpp' || echo '$(srcdir)/'`BulletDynamics/Vehicle/btWheelInfo.cpp

btRaycastVehicle.lo: BulletDynamics/Vehicle/btRaycastVehicle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btRaycastVehicle.lo -MD -MP -MF $(DEPDIR)/btRaycastVehicle.Tpo -c -o btRaycastVehicle.lo `test -f 'BulletDynamics/Vehicle/btRaycastVehicle.cpp' || echo '$(srcdir)/'`BulletDynamics/Vehicle/btRaycastVehicle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btRaycastVehicle.Tpo $(DEPDIR)/btRaycastVehicle.Plo
#	$(AM_V_CXX)source='BulletDynamics/Vehicle/btRaycastVehicle.cpp' object='btRaycastVehicle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btRaycastVehicle.lo `test -f 'BulletDynamics/Vehicle/btRaycastVehicle.cpp' || echo '$(srcdir)/'`BulletDynamics/Vehicle/btRaycastVehicle.cpp

btKinematicCharacterController.lo: BulletDynamics/Character/btKinematicCharacterController.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btKinematicCharacterController.lo -MD -MP -MF $(DEPDIR)/btKinematicCharacterController.Tpo -c -o btKinematicCharacterController.lo `test -f 'BulletDynamics/Character/btKinematicCharacterController.cpp' || echo '$(srcdir)/'`BulletDynamics/Character/btKinematicCharacterController.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btKinematicCharacterController.Tpo $(DEPDIR)/btKinematicCharacterController.Plo
#	$(AM_V_CXX)source='BulletDynamics/Character/btKinematicCharacterController.cpp' object='btKinematicCharacterController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btKinematicCharacterController.lo `test -f 'BulletDynamics/Character/btKinematicCharacterController.cpp' || echo '$(srcdir)/'`BulletDynamics/Character/btKinematicCharacterController.cpp

btQuickprof.lo: LinearMath/btQuickprof.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btQuickprof.lo -MD -MP -MF $(DEPDIR)/btQuickprof.Tpo -c -o btQuickprof.lo `test -f 'LinearMath/btQuickprof.cpp' || echo '$(srcdir)/'`LinearMath/btQuickprof.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btQuickprof.Tpo $(DEPDIR)/btQuickprof.Plo
#	$(AM_V_CXX)source='LinearMath/btQuickprof.cpp' object='btQuickprof.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btQuickprof.lo `test -f 'LinearMath/btQuickprof.cpp' || echo '$(srcdir)/'`LinearMath/btQuickprof.cpp

btGeometryUtil.lo: LinearMath/btGeometryUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btGeometryUtil.lo -MD -MP -MF $(DEPDIR)/btGeometryUtil.Tpo -c -o btGeometryUtil.lo `test -f 'LinearMath/btGeometryUtil.cpp' || echo '$(srcdir)/'`LinearMath/btGeometryUtil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btGeometryUtil.Tpo $(DEPDIR)/btGeometryUtil.Plo
#	$(AM_V_CXX)source='LinearMath/btGeometryUtil.cpp' object='btGeometryUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btGeometryUtil.lo `test -f 'LinearMath/btGeometryUtil.cpp' || echo '$(srcdir)/'`LinearMath/btGeometryUtil.cpp

btAlignedAllocator.lo: LinearMath/btAlignedAllocator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btAlignedAllocator.lo -MD -MP -MF $(DEPDIR)/btAlignedAllocator.Tpo -c -o btAlignedAllocator.lo `test -f 'LinearMath/btAlignedAllocator.cpp' || echo '$(srcdir)/'`LinearMath/btAlignedAllocator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btAlignedAllocator.Tpo $(DEPDIR)/btAlignedAllocator.Plo
#	$(AM_V_CXX)source='LinearMath/btAlignedAllocator.cpp' object='btAlignedAllocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btAlignedAllocator.lo `test -f 'LinearMath/btAlignedAllocator.cpp' || echo '$(srcdir)/'`LinearMath/btAlignedAllocator.cpp

btConvexHull.lo: LinearMath/btConvexHull.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btConvexHull.lo -MD -MP -MF $(DEPDIR)/btConvexHull.Tpo -c -o btConvexHull.lo `test -f 'LinearMath/btConvexHull.cpp' || echo '$(srcdir)/'`LinearMath/btConvexHull.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btConvexHull.Tpo $(DEPDIR)/btConvexHull.Plo
#	$(AM_V_CXX)source='LinearMath/btConvexHull.cpp' object='btConvexHull.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btConvexHull.lo `test -f 'LinearMath/btConvexHull.cpp' || echo '$(srcdir)/'`LinearMath/btConvexHull.cpp

btSoftBodyRigidBodyCollisionConfiguration.lo: BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftBodyRigidBodyCollisionConfiguration.lo -MD -MP -MF $(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Tpo -c -o btSoftBodyRigidBodyCollisionConfiguration.lo `test -f 'BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Tpo $(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp' object='btSoftBodyRigidBodyCollisionConfiguration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftBodyRigidBodyCollisionConfiguration.lo `test -f 'BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp

btSoftBody.lo: BulletSoftBody/btSoftBody.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftBody.lo -MD -MP -MF $(DEPDIR)/btSoftBody.Tpo -c -o btSoftBody.lo `test -f 'BulletSoftBody/btSoftBody.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBody.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftBody.Tpo $(DEPDIR)/btSoftBody.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftBody.cpp' object='btSoftBody.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftBody.lo `test -f 'BulletSoftBody/btSoftBody.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBody.cpp

btSoftRigidCollisionAlgorithm.lo: BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftRigidCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSoftRigidCollisionAlgorithm.Tpo -c -o btSoftRigidCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftRigidCollisionAlgorithm.Tpo $(DEPDIR)/btSoftRigidCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp' object='btSoftRigidCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftRigidCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp

btSoftBodyConcaveCollisionAlgorithm.lo: BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftBodyConcaveCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Tpo -c -o btSoftBodyConcaveCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Tpo $(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp' object='btSoftBodyConcaveCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftBodyConcaveCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp

btSoftRigidDynamicsWorld.lo: BulletSoftBody/btSoftRigidDynamicsWorld.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftRigidDynamicsWorld.lo -MD -MP -MF $(DEPDIR)/btSoftRigidDynamicsWorld.Tpo -c -o btSoftRigidDynamicsWorld.lo `test -f 'BulletSoftBody/btSoftRigidDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftRigidDynamicsWorld.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftRigidDynamicsWorld.Tpo $(DEPDIR)/btSoftRigidDynamicsWorld.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftRigidDynamicsWorld.cpp' object='btSoftRigidDynamicsWorld.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftRigidDynamicsWorld.lo `test -f 'BulletSoftBody/btSoftRigidDynamicsWorld.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftRigidDynamicsWorld.cpp

btSoftBodyHelpers.lo: BulletSoftBody/btSoftBodyHelpers.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftBodyHelpers.lo -MD -MP -MF $(DEPDIR)/btSoftBodyHelpers.Tpo -c -o btSoftBodyHelpers.lo `test -f 'BulletSoftBody/btSoftBodyHelpers.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyHelpers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftBodyHelpers.Tpo $(DEPDIR)/btSoftBodyHelpers.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftBodyHelpers.cpp' object='btSoftBodyHelpers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftBodyHelpers.lo `test -f 'BulletSoftBody/btSoftBodyHelpers.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftBodyHelpers.cpp

btSoftSoftCollisionAlgorithm.lo: BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT btSoftSoftCollisionAlgorithm.lo -MD -MP -MF $(DEPDIR)/btSoftSoftCollisionAlgorithm.Tpo -c -o btSoftSoftCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/btSoftSoftCollisionAlgorithm.Tpo $(DEPDIR)/btSoftSoftCollisionAlgorithm.Plo
#	$(AM_V_CXX)source='BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp' object='btSoftSoftCollisionAlgorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o btSoftSoftCollisionAlgorithm.lo `test -f 'BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp' || echo '$(srcdir)/'`BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/Bullet-C-API.Plo
	-rm -f ./$(DEPDIR)/SphereTriangleDetector.Plo
	-rm -f ./$(DEPDIR)/btActivatingCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btAlignedAllocator.Plo
	-rm -f ./$(DEPDIR)/btAxisSweep3.Plo
	-rm -f ./$(DEPDIR)/btBoxBoxCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btBoxBoxDetector.Plo
	-rm -f ./$(DEPDIR)/btBoxShape.Plo
	-rm -f ./$(DEPDIR)/btBroadphaseProxy.Plo
	-rm -f ./$(DEPDIR)/btBvhTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btCapsuleShape.Plo
	-rm -f ./$(DEPDIR)/btCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btCollisionDispatcher.Plo
	-rm -f ./$(DEPDIR)/btCollisionObject.Plo
	-rm -f ./$(DEPDIR)/btCollisionShape.Plo
	-rm -f ./$(DEPDIR)/btCollisionWorld.Plo
	-rm -f ./$(DEPDIR)/btCompoundCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btCompoundShape.Plo
	-rm -f ./$(DEPDIR)/btConcaveShape.Plo
	-rm -f ./$(DEPDIR)/btConeShape.Plo
	-rm -f ./$(DEPDIR)/btConeTwistConstraint.Plo
	-rm -f ./$(DEPDIR)/btContactConstraint.Plo
	-rm -f ./$(DEPDIR)/btContinuousConvexCollision.Plo
	-rm -f ./$(DEPDIR)/btContinuousDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btConvexCast.Plo
	-rm -f ./$(DEPDIR)/btConvexConcaveCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexConvexAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexHull.Plo
	-rm -f ./$(DEPDIR)/btConvexHullShape.Plo
	-rm -f ./$(DEPDIR)/btConvexInternalShape.Plo
	-rm -f ./$(DEPDIR)/btConvexPlaneCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexPointCloudShape.Plo
	-rm -f ./$(DEPDIR)/btConvexShape.Plo
	-rm -f ./$(DEPDIR)/btConvexTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btCylinderShape.Plo
	-rm -f ./$(DEPDIR)/btDbvt.Plo
	-rm -f ./$(DEPDIR)/btDbvtBroadphase.Plo
	-rm -f ./$(DEPDIR)/btDefaultCollisionConfiguration.Plo
	-rm -f ./$(DEPDIR)/btDiscreteDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btDispatcher.Plo
	-rm -f ./$(DEPDIR)/btEmptyCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btEmptyShape.Plo
	-rm -f ./$(DEPDIR)/btGImpactBvh.Plo
	-rm -f ./$(DEPDIR)/btGImpactCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btGImpactQuantizedBvh.Plo
	-rm -f ./$(DEPDIR)/btGImpactShape.Plo
	-rm -f ./$(DEPDIR)/btGeneric6DofConstraint.Plo
	-rm -f ./$(DEPDIR)/btGeometryUtil.Plo
	-rm -f ./$(DEPDIR)/btGhostObject.Plo
	-rm -f ./$(DEPDIR)/btGjkConvexCast.Plo
	-rm -f ./$(DEPDIR)/btGjkEpa2.Plo
	-rm -f ./$(DEPDIR)/btGjkEpaPenetrationDepthSolver.Plo
	-rm -f ./$(DEPDIR)/btGjkPairDetector.Plo
	-rm -f ./$(DEPDIR)/btHeightfieldTerrainShape.Plo
	-rm -f ./$(DEPDIR)/btHingeConstraint.Plo
	-rm -f ./$(DEPDIR)/btKinematicCharacterController.Plo
	-rm -f ./$(DEPDIR)/btManifoldResult.Plo
	-rm -f ./$(DEPDIR)/btMinkowskiPenetrationDepthSolver.Plo
	-rm -f ./$(DEPDIR)/btMinkowskiSumShape.Plo
	-rm -f ./$(DEPDIR)/btMultiSapBroadphase.Plo
	-rm -f ./$(DEPDIR)/btMultiSphereShape.Plo
	-rm -f ./$(DEPDIR)/btMultimaterialTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btOptimizedBvh.Plo
	-rm -f ./$(DEPDIR)/btOverlappingPairCache.Plo
	-rm -f ./$(DEPDIR)/btPersistentManifold.Plo
	-rm -f ./$(DEPDIR)/btPoint2PointConstraint.Plo
	-rm -f ./$(DEPDIR)/btPolyhedralConvexShape.Plo
	-rm -f ./$(DEPDIR)/btQuantizedBvh.Plo
	-rm -f ./$(DEPDIR)/btQuickprof.Plo
	-rm -f ./$(DEPDIR)/btRaycastCallback.Plo
	-rm -f ./$(DEPDIR)/btRaycastVehicle.Plo
	-rm -f ./$(DEPDIR)/btRigidBody.Plo
	-rm -f ./$(DEPDIR)/btScaledBvhTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btSequentialImpulseConstraintSolver.Plo
	-rm -f ./$(DEPDIR)/btShapeHull.Plo
	-rm -f ./$(DEPDIR)/btSimpleBroadphase.Plo
	-rm -f ./$(DEPDIR)/btSimpleDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btSimulationIslandManager.Plo
	-rm -f ./$(DEPDIR)/btSliderConstraint.Plo
	-rm -f ./$(DEPDIR)/btSoftBody.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyHelpers.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Plo
	-rm -f ./$(DEPDIR)/btSoftRigidCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSoftRigidDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btSoftSoftCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSolve2LinearConstraint.Plo
	-rm -f ./$(DEPDIR)/btSphereBoxCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSphereShape.Plo
	-rm -f ./$(DEPDIR)/btSphereSphereCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSphereTriangleCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btStaticPlaneShape.Plo
	-rm -f ./$(DEPDIR)/btStridingMeshInterface.Plo
	-rm -f ./$(DEPDIR)/btSubSimplexConvexCast.Plo
	-rm -f ./$(DEPDIR)/btTetrahedronShape.Plo
	-rm -f ./$(DEPDIR)/btTriangleBuffer.Plo
	-rm -f ./$(DEPDIR)/btTriangleCallback.Plo
	-rm -f ./$(DEPDIR)/btTriangleIndexVertexArray.Plo
	-rm -f ./$(DEPDIR)/btTriangleIndexVertexMaterialArray.Plo
	-rm -f ./$(DEPDIR)/btTriangleMesh.Plo
	-rm -f ./$(DEPDIR)/btTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btTriangleShapeEx.Plo
	-rm -f ./$(DEPDIR)/btTypedConstraint.Plo
	-rm -f ./$(DEPDIR)/btUniformScalingShape.Plo
	-rm -f ./$(DEPDIR)/btUnionFind.Plo
	-rm -f ./$(DEPDIR)/btVoronoiSimplexSolver.Plo
	-rm -f ./$(DEPDIR)/btWheelInfo.Plo
	-rm -f ./$(DEPDIR)/gim_box_set.Plo
	-rm -f ./$(DEPDIR)/gim_contact.Plo
	-rm -f ./$(DEPDIR)/gim_memory.Plo
	-rm -f ./$(DEPDIR)/gim_tri_collision.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/Bullet-C-API.Plo
	-rm -f ./$(DEPDIR)/SphereTriangleDetector.Plo
	-rm -f ./$(DEPDIR)/btActivatingCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btAlignedAllocator.Plo
	-rm -f ./$(DEPDIR)/btAxisSweep3.Plo
	-rm -f ./$(DEPDIR)/btBoxBoxCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btBoxBoxDetector.Plo
	-rm -f ./$(DEPDIR)/btBoxShape.Plo
	-rm -f ./$(DEPDIR)/btBroadphaseProxy.Plo
	-rm -f ./$(DEPDIR)/btBvhTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btCapsuleShape.Plo
	-rm -f ./$(DEPDIR)/btCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btCollisionDispatcher.Plo
	-rm -f ./$(DEPDIR)/btCollisionObject.Plo
	-rm -f ./$(DEPDIR)/btCollisionShape.Plo
	-rm -f ./$(DEPDIR)/btCollisionWorld.Plo
	-rm -f ./$(DEPDIR)/btCompoundCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btCompoundShape.Plo
	-rm -f ./$(DEPDIR)/btConcaveShape.Plo
	-rm -f ./$(DEPDIR)/btConeShape.Plo
	-rm -f ./$(DEPDIR)/btConeTwistConstraint.Plo
	-rm -f ./$(DEPDIR)/btContactConstraint.Plo
	-rm -f ./$(DEPDIR)/btContinuousConvexCollision.Plo
	-rm -f ./$(DEPDIR)/btContinuousDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btConvexCast.Plo
	-rm -f ./$(DEPDIR)/btConvexConcaveCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexConvexAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexHull.Plo
	-rm -f ./$(DEPDIR)/btConvexHullShape.Plo
	-rm -f ./$(DEPDIR)/btConvexInternalShape.Plo
	-rm -f ./$(DEPDIR)/btConvexPlaneCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btConvexPointCloudShape.Plo
	-rm -f ./$(DEPDIR)/btConvexShape.Plo
	-rm -f ./$(DEPDIR)/btConvexTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btCylinderShape.Plo
	-rm -f ./$(DEPDIR)/btDbvt.Plo
	-rm -f ./$(DEPDIR)/btDbvtBroadphase.Plo
	-rm -f ./$(DEPDIR)/btDefaultCollisionConfiguration.Plo
	-rm -f ./$(DEPDIR)/btDiscreteDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btDispatcher.Plo
	-rm -f ./$(DEPDIR)/btEmptyCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btEmptyShape.Plo
	-rm -f ./$(DEPDIR)/btGImpactBvh.Plo
	-rm -f ./$(DEPDIR)/btGImpactCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btGImpactQuantizedBvh.Plo
	-rm -f ./$(DEPDIR)/btGImpactShape.Plo
	-rm -f ./$(DEPDIR)/btGeneric6DofConstraint.Plo
	-rm -f ./$(DEPDIR)/btGeometryUtil.Plo
	-rm -f ./$(DEPDIR)/btGhostObject.Plo
	-rm -f ./$(DEPDIR)/btGjkConvexCast.Plo
	-rm -f ./$(DEPDIR)/btGjkEpa2.Plo
	-rm -f ./$(DEPDIR)/btGjkEpaPenetrationDepthSolver.Plo
	-rm -f ./$(DEPDIR)/btGjkPairDetector.Plo
	-rm -f ./$(DEPDIR)/btHeightfieldTerrainShape.Plo
	-rm -f ./$(DEPDIR)/btHingeConstraint.Plo
	-rm -f ./$(DEPDIR)/btKinematicCharacterController.Plo
	-rm -f ./$(DEPDIR)/btManifoldResult.Plo
	-rm -f ./$(DEPDIR)/btMinkowskiPenetrationDepthSolver.Plo
	-rm -f ./$(DEPDIR)/btMinkowskiSumShape.Plo
	-rm -f ./$(DEPDIR)/btMultiSapBroadphase.Plo
	-rm -f ./$(DEPDIR)/btMultiSphereShape.Plo
	-rm -f ./$(DEPDIR)/btMultimaterialTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btOptimizedBvh.Plo
	-rm -f ./$(DEPDIR)/btOverlappingPairCache.Plo
	-rm -f ./$(DEPDIR)/btPersistentManifold.Plo
	-rm -f ./$(DEPDIR)/btPoint2PointConstraint.Plo
	-rm -f ./$(DEPDIR)/btPolyhedralConvexShape.Plo
	-rm -f ./$(DEPDIR)/btQuantizedBvh.Plo
	-rm -f ./$(DEPDIR)/btQuickprof.Plo
	-rm -f ./$(DEPDIR)/btRaycastCallback.Plo
	-rm -f ./$(DEPDIR)/btRaycastVehicle.Plo
	-rm -f ./$(DEPDIR)/btRigidBody.Plo
	-rm -f ./$(DEPDIR)/btScaledBvhTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btSequentialImpulseConstraintSolver.Plo
	-rm -f ./$(DEPDIR)/btShapeHull.Plo
	-rm -f ./$(DEPDIR)/btSimpleBroadphase.Plo
	-rm -f ./$(DEPDIR)/btSimpleDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btSimulationIslandManager.Plo
	-rm -f ./$(DEPDIR)/btSliderConstraint.Plo
	-rm -f ./$(DEPDIR)/btSoftBody.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyConcaveCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyHelpers.Plo
	-rm -f ./$(DEPDIR)/btSoftBodyRigidBodyCollisionConfiguration.Plo
	-rm -f ./$(DEPDIR)/btSoftRigidCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSoftRigidDynamicsWorld.Plo
	-rm -f ./$(DEPDIR)/btSoftSoftCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSolve2LinearConstraint.Plo
	-rm -f ./$(DEPDIR)/btSphereBoxCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSphereShape.Plo
	-rm -f ./$(DEPDIR)/btSphereSphereCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btSphereTriangleCollisionAlgorithm.Plo
	-rm -f ./$(DEPDIR)/btStaticPlaneShape.Plo
	-rm -f ./$(DEPDIR)/btStridingMeshInterface.Plo
	-rm -f ./$(DEPDIR)/btSubSimplexConvexCast.Plo
	-rm -f ./$(DEPDIR)/btTetrahedronShape.Plo
	-rm -f ./$(DEPDIR)/btTriangleBuffer.Plo
	-rm -f ./$(DEPDIR)/btTriangleCallback.Plo
	-rm -f ./$(DEPDIR)/btTriangleIndexVertexArray.Plo
	-rm -f ./$(DEPDIR)/btTriangleIndexVertexMaterialArray.Plo
	-rm -f ./$(DEPDIR)/btTriangleMesh.Plo
	-rm -f ./$(DEPDIR)/btTriangleMeshShape.Plo
	-rm -f ./$(DEPDIR)/btTriangleShapeEx.Plo
	-rm -f ./$(DEPDIR)/btTypedConstraint.Plo
	-rm -f ./$(DEPDIR)/btUniformScalingShape.Plo
	-rm -f ./$(DEPDIR)/btUnionFind.Plo
	-rm -f ./$(DEPDIR)/btVoronoiSimplexSolver.Plo
	-rm -f ./$(DEPDIR)/btWheelInfo.Plo
	-rm -f ./$(DEPDIR)/gim_box_set.Plo
	-rm -f ./$(DEPDIR)/gim_contact.Plo
	-rm -f ./$(DEPDIR)/gim_memory.Plo
	-rm -f ./$(DEPDIR)/gim_tri_collision.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
